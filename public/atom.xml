<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>黑心の南瓜🎃</title>
  
  <subtitle>Blackpumpkin</subtitle>
  <link href="http://www.blackpumpkin.site/atom.xml" rel="self"/>
  
  <link href="http://www.blackpumpkin.site/"/>
  <updated>2024-02-15T16:28:06.859Z</updated>
  <id>http://www.blackpumpkin.site/</id>
  
  <author>
    <name>黑心の南瓜🎃</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>记录给家里老电脑重装系统的过程</title>
    <link href="http://www.blackpumpkin.site/post/5e348149.html"/>
    <id>http://www.blackpumpkin.site/post/5e348149.html</id>
    <published>2024-02-15T13:22:41.000Z</published>
    <updated>2024-02-15T16:28:06.859Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>父亲表示家里的旧电脑使用起来非常的卡，发现是老旧的sata盘已经有坏道了，于是把笔记本换下来的固态装到了机箱里，重新做一遍系统。</p></div><h1 id="一、重装windows11系统"><a href="#一、重装windows11系统" class="headerlink" title="一、重装windows11系统"></a>一、重装windows11系统</h1><p>我们需要提前准备好以下内容：<br>1.PE镜像安装程序，我选择的是<a href="https://www.wepe.com.cn/download.html">微PE</a>，选择<code>微PE工具箱V2.3</code>版本下载。</p><p><font color=red>注意，一定不要使用<strong>某蔬菜、某水果</strong>的PE安装程序！</font><br>2.windows11官方原版镜像，在<a href="https://www.microsoft.com/zh-cn/software-download/windows11">下载 Windows 11</a>页面中选择<code>下载 Windows 11 磁盘映像 (ISO)</code>，在<strong>下载 Windows 11 磁盘映像 (ISO)</strong>下拉菜单中选择<code>Windows 11(multi-edition ISO)</code>，选择产品语言为简体中文，点击下载即可。<br>3.一个至少8GB存储容量的U盘，最好是空U盘，主要是上述iso镜像文件为6.36GB，我们需要把文件放到U盘内。</p><p>以下为重装过程：</p><h2 id="1-为U盘安装PE系统"><a href="#1-为U盘安装PE系统" class="headerlink" title="1.为U盘安装PE系统"></a>1.为U盘安装PE系统</h2><p>直接打开微PE程序，<strong>不要点击立即安装进系统</strong>，选择左下角的<code>安装PE到U盘</code>，待写入U盘选择自己准备好的U盘，勾选<code>包含DOS工具箱</code>，<code>点击立即安装PE到U盘</code>，等待安装完毕即可。</p><h2 id="2-进入PE系统安装"><a href="#2-进入PE系统安装" class="headerlink" title="2.进入PE系统安装"></a>2.进入PE系统安装</h2><p>保持U盘的插入状态，重启电脑，进入PE系统，打开“DiskGenius”，将原本的sata盘悉数格式化（格式化当前分区+删除当前分区），再将新准备的ssd分好分区（格式化当前分区+建立新分区，将想要安装系统的分区盘符设定为C盘）。<br>打开“Windows安装器”，“选择安装映像文件文件位置”选择U盘内上述准备好的iso文件，“选择可引导驱动器位置”和“选择安装驱动器的位置”选择C盘，“选项”下拉菜单中选择<code>Windows 11 专业版</code>，点击<code>安装</code>即可等待完成。<br>弹出“重启 SysPrep 阶段将开始”的弹窗后，点击<code>重启</code>。</p><p>注意：如果重启电脑没有进入到PE系统而是继续进入windows，那么说明<font color=red>bios的启动顺序没有修改</font>，解决方法为：<br>在电脑开机自检屏幕消失之前，多次快速按下键盘上的<strong>F2/F3/F8/F12/Delete</strong>键（具体需要根据自己主板的品牌查询），进入bios界面，调整优先启动顺序为U盘即可。</p><h2 id="3-windows11初次设置"><a href="#3-windows11初次设置" class="headerlink" title="3.windows11初次设置"></a>3.windows11初次设置</h2><p>这些内容均可自由发挥，以下是我的设置：<br>| 内容 | 设置 | 备注 |<br>| :——-: | :——-: | :——-: |<br>| 国家 | 中国 |  |<br>| 输入法 | 微软拼音 |  |<br>| 第二种键盘布局 | 跳过 | 此处设置完成后，<strong>断网</strong> |<br>| 连接邮箱 |  | <strong>断网即可跳过此步骤</strong> |<br>| 姓名 |  | 给自己的系统命名 |<br>| 密码 |  | 此处可以留空，开机即可直接进入桌面 |<br>| 隐私设置 |  | 默认即可，也可全部关闭 |</p><h1 id="二、系统设置"><a href="#二、系统设置" class="headerlink" title="二、系统设置"></a>二、系统设置</h1><h2 id="1-激活Windows"><a href="#1-激活Windows" class="headerlink" title="1.激活Windows"></a>1.激活Windows</h2><p>下载<a href="https://github.com/zbezj/HEU_KMS_Activator">HEU KMS Activator</a>工具，直接打开，点击<code>开始</code>即可,等待完成，激活成功。</p><h2 id="2-驱动程序"><a href="#2-驱动程序" class="headerlink" title="2.驱动程序"></a>2.驱动程序</h2><p>根据自己的bios品牌，在官网下载对应的驱动程序。</p><h2 id="3-BitLocker"><a href="#3-BitLocker" class="headerlink" title="3.BitLocker"></a>3.BitLocker</h2><p>在设置内搜索BitLocker，请务必将ssd的BitLocker功能关闭！</p><h2 id="4-Windows更新"><a href="#4-Windows更新" class="headerlink" title="4.Windows更新"></a>4.Windows更新</h2><p><code>设置</code>——<code>Windows更新</code>——<code>立即更新</code>，安装最新的系统补丁。</p><h1 id="三、软件安装"><a href="#三、软件安装" class="headerlink" title="三、软件安装"></a>三、软件安装</h1><h2 id="1-Office办公软件"><a href="#1-Office办公软件" class="headerlink" title="1.Office办公软件"></a>1.Office办公软件</h2><p>下载<a href="https://otp.landian.vip/docs/zh-cn/">Office Tool Plus</a>，打开软件，在“部署”页面中添加产品选择<code>Office LTSC 专业增强版 2021 - 批量许可证</code>，应用程序至少勾选Excel、PowerPoint、Word，添加语言选择简体中文(中国)。“部署Office”后点击“开始部署”，即可进行安装。<br>安装完成后，切换到激活页面，在许可证管理——安装许可证后点击安装，在KMS管理——KMS主机后填写<code>kms.O3k.org:1688</code>，“许可证管理”后点击“激活”。</p><h2 id="2-其它软件"><a href="#2-其它软件" class="headerlink" title="2.其它软件"></a>2.其它软件</h2><div class="table-container"><table><thead><tr><th style="text-align:center">软件名称</th><th style="text-align:center">软件类型</th><th style="text-align:center">下载地址</th><th style="text-align:center">软件说明</th></tr></thead><tbody><tr><td style="text-align:center">图吧工具箱</td><td style="text-align:center">系统维护</td><td style="text-align:center"><a href="https://www.tbtool.cn/">https://www.tbtool.cn/</a></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">potplayer</td><td style="text-align:center">视频播放</td><td style="text-align:center"><a href="https://potplayer.io/">https://potplayer.io/</a></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">bandzip</td><td style="text-align:center">解压缩</td><td style="text-align:center"><a href="https://www.bandisoft.com/">https://www.bandisoft.com/</a></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">Honeyview</td><td style="text-align:center">图片播放</td><td style="text-align:center"><a href="https://www.bandisoft.com/honeyview/">https://www.bandisoft.com/honeyview/</a></td></tr></tbody></table></div>]]></content>
    
    
    <summary type="html">记录给家里老电脑重装系统的过程</summary>
    
    
    
    <category term="重装系统" scheme="http://www.blackpumpkin.site/categories/%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="系统，重装，windows，软件" scheme="http://www.blackpumpkin.site/tags/%E7%B3%BB%E7%BB%9F%EF%BC%8C%E9%87%8D%E8%A3%85%EF%BC%8Cwindows%EF%BC%8C%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Steam自动探索队列</title>
    <link href="http://www.blackpumpkin.site/post/e70c1929.html"/>
    <id>http://www.blackpumpkin.site/post/e70c1929.html</id>
    <published>2024-01-01T10:41:10.000Z</published>
    <updated>2024-02-15T14:48:16.571Z</updated>
    
    <content type="html"><![CDATA[<div class="note default flat"><p>参考教程：<a href="https://keylol.com/t157861-1-1">Steam探索队列 控制台版, 无视限区游戏</a></p></div><h1 id="一、控制台执行脚本"><a href="#一、控制台执行脚本" class="headerlink" title="一、控制台执行脚本"></a>一、控制台执行脚本</h1><p>1.打开Steam商店主页并处于登陆状态（不会真有人不知道正版Steam主页是<a href="https://store.steampowered.com/">这个</a>而不是XX管家、XX游戏中心一类的吧）<br>2.在Steam商店页面打开浏览器控制台, 此处以chrome浏览器为例，chrome是F12键，切换到<code>控制台</code>一栏（英文界面为<code>console</code>一栏）<br>3.将下面的代码复制到浏览器的控制台回车运行即可。<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">function</span> <span class="title function_">_exec</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">var</span> appids, </span><br><span class="line">    running = <span class="literal">true</span>, </span><br><span class="line">    queueNumber, </span><br><span class="line">    progressDialog = <span class="title class_">ShowAlertDialog</span>(<span class="string">&#x27;探索中&#x27;</span>, $J(<span class="string">&#x27;&lt;div/&gt;&#x27;</span>).<span class="title function_">append</span>($J(<span class="string">&#x27;&lt;div/&gt;&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;waiting_dialog_throbber&#x27;</span>&#125;) ).<span class="title function_">append</span>( $J(<span class="string">&#x27;&lt;div/&gt;&#x27;</span>, &#123;<span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;progressContainer&#x27;</span>&#125;).<span class="title function_">text</span>(<span class="string">&#x27;获取进度...&#x27;</span>) ), <span class="string">&#x27;停止&#x27;</span>).<span class="title function_">done</span>(abort);</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">abort</span>(<span class="params"></span>)&#123;</span><br><span class="line">  running = <span class="literal">false</span>;</span><br><span class="line">  progressDialog.<span class="title class_">Dismiss</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">retry</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="title function_">abort</span>();</span><br><span class="line">  <span class="title class_">ShowConfirmDialog</span>(<span class="string">&#x27;错误&#x27;</span>, <span class="string">&#x27;是否重试?&#x27;</span>, <span class="string">&#x27;重试&#x27;</span>, <span class="string">&#x27;放弃&#x27;</span>).<span class="title function_">done</span>(_exec)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">clearApp</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(!running)</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  <span class="title function_">showProgress</span>();</span><br><span class="line">  <span class="keyword">var</span> appid = appids.<span class="title function_">shift</span>();</span><br><span class="line">  !appid ? <span class="title function_">generateQueue</span>() : $J.<span class="title function_">post</span>( appids.<span class="property">length</span> ? <span class="string">&#x27;/app/&#x27;</span> + appid : <span class="string">&#x27;/explore/next/&#x27;</span>, &#123;<span class="attr">sessionid</span>: g_sessionID, <span class="attr">appid_to_clear_from_queue</span>: appid&#125; ).<span class="title function_">done</span>(clearApp).<span class="title function_">fail</span>(retry); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateQueue</span>(<span class="params"></span>)&#123;</span><br><span class="line">  running &amp;&amp; $J.<span class="title function_">post</span>(<span class="string">&#x27;/explore/generatenewdiscoveryqueue&#x27;</span>, &#123;<span class="attr">sessionid</span>: g_sessionID, <span class="attr">queuetype</span>: <span class="number">0</span>&#125;).<span class="title function_">done</span>(beginQueue).<span class="title function_">fail</span>(retry);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">beginQueue</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(!running)</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  $J.<span class="title function_">get</span>(<span class="string">&#x27;/explore/&#x27;</span>).<span class="title function_">done</span>(<span class="keyword">function</span>(<span class="params">htmlText</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> cardInfo = htmlText.<span class="title function_">match</span>(<span class="regexp">/&lt;div class=&quot;subtext&quot;&gt;\D+(\d)\D+&lt;\/div&gt;/</span>);</span><br><span class="line">    <span class="keyword">if</span>( !cardInfo )&#123;</span><br><span class="line">      <span class="title function_">abort</span>();</span><br><span class="line">      <span class="title class_">ShowAlertDialog</span>(<span class="string">&#x27;完成&#x27;</span>,<span class="string">&#x27;已完成全部3轮探索队列&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> matchedAppids = htmlText.<span class="title function_">match</span>(<span class="regexp">/0,\s+(\[.*\])/</span>);</span><br><span class="line">    <span class="keyword">if</span>( !matchedAppids )&#123;</span><br><span class="line">      <span class="title function_">retry</span>();</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    appids = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(matchedAppids[<span class="number">1</span>]);</span><br><span class="line">    queueNumber = cardInfo[<span class="number">1</span>];</span><br><span class="line">    appids.<span class="property">length</span> == <span class="number">0</span> ? <span class="title function_">generateQueue</span>() : <span class="title function_">clearApp</span>();</span><br><span class="line">    <span class="title function_">showProgress</span>();</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">showProgress</span>(<span class="params"></span>)&#123;</span><br><span class="line">  $J(<span class="string">&#x27;#progressContainer&#x27;</span>).<span class="title function_">html</span>( <span class="string">&#x27;&lt;br&gt;剩余&#x27;</span> + queueNumber + <span class="string">&#x27;个待探索队列, 当前队列剩余&#x27;</span> + appids.<span class="property">length</span> + <span class="string">&#x27;个待探索游戏&#x27;</span> );</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">beginQueue</span>();</span><br><span class="line">&#125;())</span><br></pre></td></tr></table></figure><br>理论上是支持所有浏览器控制台的, 也不会遇到游戏限区的问题。<br>tips: 在控制台输入行按键盘的上箭头(↑)可快速输入上次运行过的命令。</p><h1 id="二、Tampermonkey自动执行脚本"><a href="#二、Tampermonkey自动执行脚本" class="headerlink" title="二、Tampermonkey自动执行脚本"></a>二、Tampermonkey自动执行脚本</h1><div class="note info flat"><p>篡改猴(或称油猴，Tampermonkey) 是拥有超过 1000 万用户的最流行的浏览器扩展之一，它允许用户自定义并增强您最喜爱的网页的功能。用户脚本是小型JavaScript程序，可用于向网页添加新功能或修改现有功能。使用篡改猴，您可以轻松在任何网站上创建、管理和运行这些用户脚本。<br>篡改猴分为黑色的Tampermonkey和红色的Tampermonkey BETA，后者为为先行测试的BETA版本，拥有最新的Tampermonkey功能，但是会有未知bug，因此我们选择前者执行脚本。</p></div><h2 id="1-为浏览器安装Tampermonkey"><a href="#1-为浏览器安装Tampermonkey" class="headerlink" title="1.为浏览器安装Tampermonkey"></a>1.为浏览器安装Tampermonkey</h2><p>仍然以chrome浏览器为例，我们可以去脚本的官方网站下载，也可去chrome官方的扩展中心下载。<br><a href="https://www.tampermonkey.net/">点我进入篡改猴官方</a><br><a href="https://chromewebstore.google.com/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?utm_source=ext_app_menu">点我进入chrome商店</a></p><h2 id="2-在Tampermonkey内保存并执行脚本"><a href="#2-在Tampermonkey内保存并执行脚本" class="headerlink" title="2.在Tampermonkey内保存并执行脚本"></a>2.在Tampermonkey内保存并执行脚本</h2><p>进入Tampermonkey的<code>管理面板</code>中，点击已安装脚本左侧的方框加号，将以下代码复制其中，<code>文件</code>——<code>保存</code>即可。<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         Steam自动探索队列</span></span><br><span class="line"><span class="comment">// @namespace    https://keylol.com/t157861-1-1</span></span><br><span class="line"><span class="comment">// @version      0.1</span></span><br><span class="line"><span class="comment">// @description  Steam节庆活动用脚本，自动探索3次队列。</span></span><br><span class="line"><span class="comment">// @author       baodongsun</span></span><br><span class="line"><span class="comment">// @match        https://store.steampowered.com/</span></span><br><span class="line"><span class="comment">// @grant        SteamCN</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Your code here...</span></span><br><span class="line">&#125;)();(<span class="keyword">function</span> <span class="title function_">_exec</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">var</span> appids, </span><br><span class="line">    running = <span class="literal">true</span>, </span><br><span class="line">    queueNumber, </span><br><span class="line">    progressDialog = <span class="title class_">ShowAlertDialog</span>(<span class="string">&#x27;探索中&#x27;</span>, $J(<span class="string">&#x27;&lt;div/&gt;&#x27;</span>).<span class="title function_">append</span>($J(<span class="string">&#x27;&lt;div/&gt;&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;waiting_dialog_throbber&#x27;</span>&#125;) ).<span class="title function_">append</span>( $J(<span class="string">&#x27;&lt;div/&gt;&#x27;</span>, &#123;<span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;progressContainer&#x27;</span>&#125;).<span class="title function_">text</span>(<span class="string">&#x27;获取进度...&#x27;</span>) ), <span class="string">&#x27;停止&#x27;</span>).<span class="title function_">done</span>(abort);</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">abort</span>(<span class="params"></span>)&#123;</span><br><span class="line">  running = <span class="literal">false</span>;</span><br><span class="line">  progressDialog.<span class="title class_">Dismiss</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">retry</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="title function_">abort</span>();</span><br><span class="line">  <span class="title class_">ShowConfirmDialog</span>(<span class="string">&#x27;错误&#x27;</span>, <span class="string">&#x27;是否重试?&#x27;</span>, <span class="string">&#x27;重试&#x27;</span>, <span class="string">&#x27;放弃&#x27;</span>).<span class="title function_">done</span>(_exec)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">clearApp</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(!running)</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  <span class="title function_">showProgress</span>();</span><br><span class="line">  <span class="keyword">var</span> appid = appids.<span class="title function_">shift</span>();</span><br><span class="line">  !appid ? <span class="title function_">generateQueue</span>() : $J.<span class="title function_">post</span>( appids.<span class="property">length</span> ? <span class="string">&#x27;/app/&#x27;</span> + appid : <span class="string">&#x27;/explore/next/&#x27;</span>, &#123;<span class="attr">sessionid</span>: g_sessionID, <span class="attr">appid_to_clear_from_queue</span>: appid&#125; ).<span class="title function_">done</span>(clearApp).<span class="title function_">fail</span>(retry); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateQueue</span>(<span class="params"></span>)&#123;</span><br><span class="line">  running &amp;&amp; $J.<span class="title function_">post</span>(<span class="string">&#x27;/explore/generatenewdiscoveryqueue&#x27;</span>, &#123;<span class="attr">sessionid</span>: g_sessionID, <span class="attr">queuetype</span>: <span class="number">0</span>&#125;).<span class="title function_">done</span>(beginQueue).<span class="title function_">fail</span>(retry);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">beginQueue</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(!running)</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  $J.<span class="title function_">get</span>(<span class="string">&#x27;/explore/&#x27;</span>).<span class="title function_">done</span>(<span class="keyword">function</span>(<span class="params">htmlText</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> cardInfo = htmlText.<span class="title function_">match</span>(<span class="regexp">/&lt;div class=&quot;subtext&quot;&gt;\D+(\d)\D+&lt;\/div&gt;/</span>);</span><br><span class="line">    <span class="keyword">if</span>( !cardInfo )&#123;</span><br><span class="line">      <span class="title function_">abort</span>();</span><br><span class="line">      <span class="title class_">ShowAlertDialog</span>(<span class="string">&#x27;完成&#x27;</span>,<span class="string">&#x27;已完成全部3轮探索队列&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> matchedAppids = htmlText.<span class="title function_">match</span>(<span class="regexp">/0,\s+(\[.*\])/</span>);</span><br><span class="line">    <span class="keyword">if</span>( !matchedAppids )&#123;</span><br><span class="line">      <span class="title function_">retry</span>();</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    appids = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(matchedAppids[<span class="number">1</span>]);</span><br><span class="line">    queueNumber = cardInfo[<span class="number">1</span>];</span><br><span class="line">    appids.<span class="property">length</span> == <span class="number">0</span> ? <span class="title function_">generateQueue</span>() : <span class="title function_">clearApp</span>();</span><br><span class="line">    <span class="title function_">showProgress</span>();</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">showProgress</span>(<span class="params"></span>)&#123;</span><br><span class="line">  $J(<span class="string">&#x27;#progressContainer&#x27;</span>).<span class="title function_">html</span>( <span class="string">&#x27;&lt;br&gt;剩余&#x27;</span> + queueNumber + <span class="string">&#x27;个待探索队列, 当前队列剩余&#x27;</span> + appids.<span class="property">length</span> + <span class="string">&#x27;个待探索游戏&#x27;</span> );</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">beginQueue</span>();</span><br><span class="line">&#125;())</span><br></pre></td></tr></table></figure><br>此时再次进入Steam主页，脚本就会自动进行探索队列。<br>当然我们可以略微修改代码，使脚本每日仅执行一次。<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         Steam自动探索队列（每日仅执行一次）</span></span><br><span class="line"><span class="comment">// @namespace    https://keylol.com/t157861-1-1</span></span><br><span class="line"><span class="comment">// @version      0.2</span></span><br><span class="line"><span class="comment">// @description  Steam节庆活动用脚本，自动探索3次队列，仅在每天第一次打开steam网页时执行。</span></span><br><span class="line"><span class="comment">// @author       baodongsun</span></span><br><span class="line"><span class="comment">// @license      MIT</span></span><br><span class="line"><span class="comment">// @match        https://store.steampowered.com/</span></span><br><span class="line"><span class="comment">// @grant        SteamCN</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"> </span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">var</span> currentDate = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toLocaleDateString</span>();</span><br><span class="line">    <span class="keyword">var</span> lastExecutionDate = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;lastExecutionDate&#x27;</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 检查是否已经执行过脚本</span></span><br><span class="line">    <span class="keyword">if</span> (lastExecutionDate !== currentDate) &#123;</span><br><span class="line">        <span class="comment">// 在这里编写你要执行的功能脚本代码</span></span><br><span class="line">        (<span class="keyword">function</span> <span class="title function_">_exec</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">var</span> appids,</span><br><span class="line">                running = <span class="literal">true</span>,</span><br><span class="line">                queueNumber,</span><br><span class="line">                progressDialog = <span class="title class_">ShowAlertDialog</span>(<span class="string">&#x27;探索中&#x27;</span>, $J(<span class="string">&#x27;&lt;div/&gt;&#x27;</span>).<span class="title function_">append</span>($J(<span class="string">&#x27;&lt;div/&gt;&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;waiting_dialog_throbber&#x27;</span>&#125;) ).<span class="title function_">append</span>( $J(<span class="string">&#x27;&lt;div/&gt;&#x27;</span>, &#123;<span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;progressContainer&#x27;</span>&#125;).<span class="title function_">text</span>(<span class="string">&#x27;获取进度...&#x27;</span>) ), <span class="string">&#x27;停止&#x27;</span>).<span class="title function_">done</span>(abort);</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">function</span> <span class="title function_">abort</span>(<span class="params"></span>)&#123;</span><br><span class="line">                running = <span class="literal">false</span>;</span><br><span class="line">                progressDialog.<span class="title class_">Dismiss</span>();</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">function</span> <span class="title function_">retry</span>(<span class="params"></span>)&#123;</span><br><span class="line">                <span class="title function_">abort</span>();</span><br><span class="line">                <span class="title class_">ShowConfirmDialog</span>(<span class="string">&#x27;错误&#x27;</span>, <span class="string">&#x27;是否重试?&#x27;</span>, <span class="string">&#x27;重试&#x27;</span>, <span class="string">&#x27;放弃&#x27;</span>).<span class="title function_">done</span>(_exec)</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">function</span> <span class="title function_">clearApp</span>(<span class="params"></span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(!running)</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                <span class="title function_">showProgress</span>();</span><br><span class="line">                <span class="keyword">var</span> appid = appids.<span class="title function_">shift</span>();</span><br><span class="line">                !appid ? <span class="title function_">generateQueue</span>() : $J.<span class="title function_">post</span>( appids.<span class="property">length</span> ? <span class="string">&#x27;/app/&#x27;</span> + appid : <span class="string">&#x27;/explore/next/&#x27;</span>, &#123;<span class="attr">sessionid</span>: g_sessionID, <span class="attr">appid_to_clear_from_queue</span>: appid&#125; ).<span class="title function_">done</span>(clearApp).<span class="title function_">fail</span>(retry);</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">function</span> <span class="title function_">generateQueue</span>(<span class="params"></span>)&#123;</span><br><span class="line">                running &amp;&amp; $J.<span class="title function_">post</span>(<span class="string">&#x27;/explore/generatenewdiscoveryqueue&#x27;</span>, &#123;<span class="attr">sessionid</span>: g_sessionID, <span class="attr">queuetype</span>: <span class="number">0</span>&#125;).<span class="title function_">done</span>(beginQueue).<span class="title function_">fail</span>(retry);</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">function</span> <span class="title function_">beginQueue</span>(<span class="params"></span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(!running)</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                $J.<span class="title function_">get</span>(<span class="string">&#x27;/explore/&#x27;</span>).<span class="title function_">done</span>(<span class="keyword">function</span>(<span class="params">htmlText</span>)&#123;</span><br><span class="line">                    <span class="keyword">var</span> cardInfo = htmlText.<span class="title function_">match</span>(<span class="regexp">/&lt;div class=&quot;subtext&quot;&gt;\D+(\d)\D+&lt;\/div&gt;/</span>);</span><br><span class="line">                    <span class="keyword">if</span>( !cardInfo )&#123;</span><br><span class="line">                        <span class="title function_">abort</span>();</span><br><span class="line">                        <span class="title class_">ShowAlertDialog</span>(<span class="string">&#x27;完成&#x27;</span>,<span class="string">&#x27;已完成全部3轮探索队列&#x27;</span>);</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">var</span> matchedAppids = htmlText.<span class="title function_">match</span>(<span class="regexp">/0,\s+(\[.*\])/</span>);</span><br><span class="line">                    <span class="keyword">if</span>( !matchedAppids )&#123;</span><br><span class="line">                        <span class="title function_">retry</span>();</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    appids = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(matchedAppids[<span class="number">1</span>]);</span><br><span class="line">                    queueNumber = cardInfo[<span class="number">1</span>];</span><br><span class="line">                    appids.<span class="property">length</span> == <span class="number">0</span> ? <span class="title function_">generateQueue</span>() : <span class="title function_">clearApp</span>();</span><br><span class="line">                    <span class="title function_">showProgress</span>();</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">function</span> <span class="title function_">showProgress</span>(<span class="params"></span>)&#123;</span><br><span class="line">                $J(<span class="string">&#x27;#progressContainer&#x27;</span>).<span class="title function_">html</span>( <span class="string">&#x27;&lt;br&gt;剩余&#x27;</span> + queueNumber + <span class="string">&#x27;个待探索队列, 当前队列剩余&#x27;</span> + appids.<span class="property">length</span> + <span class="string">&#x27;个待探索游戏&#x27;</span> );</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="title function_">beginQueue</span>();</span><br><span class="line">        &#125;)();</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 更新最后执行时间</span></span><br><span class="line">        <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;lastExecutionDate&#x27;</span>, currentDate);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note default flat&quot;&gt;&lt;p&gt;参考教程：&lt;a href=&quot;https://keylol.com/t157861-1-1&quot;&gt;Steam探索队列 控制台版, 无视限区游戏&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&quot;一、控制台执行脚本&quot;&gt;&lt;a </summary>
      
    
    
    
    <category term="网络技巧" scheme="http://www.blackpumpkin.site/categories/%E7%BD%91%E7%BB%9C%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="steam" scheme="http://www.blackpumpkin.site/tags/steam/"/>
    
  </entry>
  
  <entry>
    <title>简易音声机翻教程</title>
    <link href="http://www.blackpumpkin.site/post/f46969ab.html"/>
    <id>http://www.blackpumpkin.site/post/f46969ab.html</id>
    <published>2023-12-15T01:41:15.000Z</published>
    <updated>2024-02-15T15:15:47.006Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>有时从网上下载的音声没有翻译，我们可以用此方法解决燃眉之急。</p></div><div class="note default flat"><p>参考教程：<a href="https://www.bilibili.com/video/BV15c411j789/">AI自动生成字幕 - 中日英多语言支持，完全免费，本地运行</a></p></div><h1 id="一、语音生成字幕文件"><a href="#一、语音生成字幕文件" class="headerlink" title="一、语音生成字幕文件"></a>一、语音生成字幕文件</h1><p>本次我们需要使用到的软件叫做WhisperDesktop，其可以帮助我们把音声内容提取为.srt一类的外挂字幕文件。<br>访问WhisperDesktop的<a href="https://github.com/Const-me/Whisper">github仓库</a>，直接下载发行版即可。<br>需要注意的是发行版内部并没有自带模型文件，因此我们还需要单独下载模型文件。<br>访问whisper.cpp的<a href="https://huggingface.co/ggerganov/whisper.cpp/tree/main">huggingface模型库</a>或者<a href="https://github.com/ggerganov/whisper.cpp/tree/master/models">github仓库</a>，下载相应的模型文件，这里推荐使用中等模型或者大模型。<br><img src="https://figure.pages.dev/post/音声翻译/微信截图_20231215104651.png" width="400"><br><br>下载完毕后，我们打开<strong>WhisperDesktop.exe</strong>文件，初次打开需要我们选择一下使用的模型文件，我们在<code>Model Path</code>内选择模型文件，点击<code>OK</code>即可。<br><img src="https://figure.pages.dev/post/音声翻译/微信截图_20231215105025.png" width="400"><br><br>我们进入到了正式的操作界面。<br>在<code>Language</code>内选择我们需要翻译的文件本身的语言（音声一般选择<code>Japanese</code>），在<code>Transcribe File</code>内选择我们想输出的字幕文件类型，这里我们选择<code>SubRip Subtitles</code>，输出的外挂字幕文件类型为srt格式。<br>我们可以勾选<code>Place that file to the input folder</code>，这样生成的外挂字幕文件与音声文件便默认处于同一文件夹内了。<br>最后点击<code>Transcribe</code>，等待字幕文件生成完毕即可。<br><img src="https://figure.pages.dev/post/音声翻译/screenshot20231129.png" width="400"><br></p><h1 id="二、字幕文件翻译"><a href="#二、字幕文件翻译" class="headerlink" title="二、字幕文件翻译"></a>二、字幕文件翻译</h1><p>我们使用PotPlayer的实时字幕翻译功能。<br>打开PotPlayer，在主界面内右键，依次选择<code>字幕</code>——<code>实时字幕翻译</code>——<code>实时字幕翻译设置</code>，可以发现里面有谷歌翻译和必应翻译等翻译器，选择想使用的翻译器即可。</p><hr><h1 id="拓展阅读：在PotPlayer内添加其它的翻译器"><a href="#拓展阅读：在PotPlayer内添加其它的翻译器" class="headerlink" title="拓展阅读：在PotPlayer内添加其它的翻译器"></a>拓展阅读：在PotPlayer内添加其它的翻译器</h1><div class="note info flat"><p>众所周知，局域网想要连接诸如某G、某X等网站，我们是需要使用一些魔法手段的，所以此时PotPlayer内置的翻译器有时会很不好用。<br>这里我们可以添加百度翻译等国内翻译器，避免了需要使用魔法的处境。</p></div><p>打开PotPlayer_Subtitle_Translate_Baidu的<a href="https://github.com/fjqingyou/PotPlayer_Subtitle_Translate_Baidu">github仓库</a>，详细阅读安装使用一章的内容。<br><details class="folding-tag" blue><summary> 百度翻译器 </summary>              <div class='content'>              <p>安装使用<br>第一步：必须开通百度翻译的开发者，并注册一个应用<br>1、前往网址：<a href="http://api.fanyi.baidu.com/api/trans/product/prodinfo">http://api.fanyi.baidu.com/api/trans/product/prodinfo</a></p><p>2、登录你自己的百度账号</p><p>3、第1的网址打开后点“产品服务”，拉到下面，有个“立即使用”</p><p>4、填写百度翻译要求的必要信息，并完成应用注册，不要填写IP地址，其他的填写啥看你个人喜好咯！</p><p>第二步：安装翻译插件<br>1、将SubtitleTranslate - baidu.as、SubtitleTranslate - baidu.ico这两个文件选中，Ctrl+C复制</p><p>2、打开PotPlayer播放器的安装路径（方法不会的请百度、谷歌等等方式搜索）</p><p>3、再进入Extention文件夹，接着又进入Subtitle文件夹、最后进入Translate文件夹</p><p>4、Ctrl+V，把刚才选择的两个文件粘贴到这个文件夹</p><p>第三步：获取和配置翻译插件的 appId 与 密钥<br>1、第一步中的1，网址，点击“管理控制台”</p><p>2、我的服务下面一点，如果有“此服务已停用 开启（这两个字蓝色）”的提示，点击“开启”</p><p>3、拉到底部，会有“申请信息”，里面包含 “APP ID” 和 “密钥”</p><p>4、随便打开一个带外挂字幕的视频，例如外挂ass字幕文件的视频！</p><p>5、右键点击视频-&gt;字幕-&gt;在线字幕翻译-&gt;实时字幕翻译设置-&gt;选中百度翻译-&gt; 点右边的 “账户设置”，会弹出一个对话框。</p><p>6、将上面第 3 步得到的“APP ID” 和 “密钥”分别填写进去，然后点确定，会再次弹出对话框，点击关闭就行了。</p><p>第四步：测试<br>1、随便打开一个带中文字幕的视频（如果上方打开的视频没关闭，不必重新打开）</p><p>2、右键点击视频-&gt;字幕-&gt;在线字幕翻译-&gt;Bai Du translate</p><p>3、右键点击视频-&gt;字幕-&gt;在线字幕翻译-&gt;总是使用(注：这个看个人需求)</p><p>4、右键点击视频-&gt;字幕-&gt;在线字幕翻译-&gt;下面显示翻译(注：这个看个人需求)</p><p>5、右键点击视频-&gt;字幕-&gt;在线字幕翻译-&gt;目标语言-&gt;之后在语言列表选择你要的，例如英语，日语、汉语等等任意一个，看个人需求。</p><p>6、畅玩吧</p><p>可选的配置 - 翻译请求的频率<br>1、这个配置是可选的，一般不用配置的</p><p>2、原因：百度翻译有默认翻译冷却时间，短时间内多次传输翻译请求，那么很可能会被拦截，如果翻译结果会提示 error:54003……那么就是被拦截了。如果出现这个，那么才有必要做这个配置，否则就不需要这个配置的！具体请参考 ‘费用方面’ 这个部分的描述</p><p>3、用记事本等文本编辑器打开刚才安装后的SubtitleTranslate - baidu.as这个文件（不是当前这个文本的同一个文件夹里的文件哦，是配置到PolPlayer里面的那个文件！）</p><p>4、修改大概23行位置的 int coolTime = 1000; 数字1000，将它加大一些，然后保存好文件再试试，如果不够就再加大一些，1000是指1秒钟，1000毫秒=1秒，是指一条字幕翻译后，下一条字幕最少需要等多久才开始翻译的意思。加大数字则代表降低请求翻译的频率，反之减少则提高请求的频率。例如设置为100时就是一秒钟翻译10条的意思，设置10000时则是10秒翻译1条的意思。请注意不要删除掉这行的最后一个英文的分号</p><p>5、保存文件</p><p>6、如果开着PotPlayer则关闭再重新打开，没开的直接打开就行了，然后就可以试试效果了。</p>              </div>            </details></p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;有时从网上下载的音声没有翻译，我们可以用此方法解决燃眉之急。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;note default flat&quot;&gt;&lt;p&gt;参考教程：&lt;a href=&quot;https://www.bilibil</summary>
      
    
    
    
    <category term="网络技巧" scheme="http://www.blackpumpkin.site/categories/%E7%BD%91%E7%BB%9C%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="音声" scheme="http://www.blackpumpkin.site/tags/%E9%9F%B3%E5%A3%B0/"/>
    
    <category term="ACG" scheme="http://www.blackpumpkin.site/tags/ACG/"/>
    
  </entry>
  
  <entry>
    <title>【ChatGPT】ChatGPT的无服务器部署</title>
    <link href="http://www.blackpumpkin.site/post/5c84e6fe.html"/>
    <id>http://www.blackpumpkin.site/post/5c84e6fe.html</id>
    <published>2023-04-16T07:47:36.000Z</published>
    <updated>2023-04-20T12:56:16.980Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>官网的ChatGPT对话很容易被打断，通过第三方部署可以很好的解决这个问题，并且不需要挂节点，本地网络即可访问。<br>参考教程：<a href="https://www.fomal.cc/posts/74ac8dc8.html">无服务器部署自己的chatGPT</a></p></div><p>项目名称：ChatGPT-Next-Web<br>项目地址：<a href="https://github.com/Yidadaa/ChatGPT-Next-Web">Yidadaa/ChatGPT-Next-Web</a><br>项目预览：<a href="chatgptnextweb.blackpumpkin.xyz" target="_self">chatgptnextweb</a><br>部署教程：详细见<a href="https://github.com/Yidadaa/ChatGPT-Next-Web/blob/main/README_CN.md">开源文档</a>。</p><h1 id="一、获取API-keys"><a href="#一、获取API-keys" class="headerlink" title="一、获取API keys"></a>一、获取API keys</h1><p>账号注册可参考教程<a href="https://www.blackpumpkin.xyz/post/8ee3673d.html">【ChatGPT】ChatGPT的注册流程分享</a>。<br>登陆账号后，我们打开<a href="https://platform.openai.com/">OPENAI的控制台</a>，点击右上角头像，选择<code>View API keys</code>——<code>+ Create new secret key</code>，输入任意名称后确定，<strong>请牢记KEY值</strong>。</p><h1 id="二、Vercel部署"><a href="#二、Vercel部署" class="headerlink" title="二、Vercel部署"></a>二、Vercel部署</h1><p>fork<code>ChatGPT-Next-Web</code>项目后，在Vercel将本项目部署，部署过程中需要在<code>Configure Project</code>处的<code>OPENAI_API_KEY</code>填写我们上文的<code>KEY</code>值，<code>CODE</code>填写一个你喜欢的密码并牢记。<br>点击<code>Deploy</code>部署。</p><h1 id="三、自定义域名（可选）"><a href="#三、自定义域名（可选）" class="headerlink" title="三、自定义域名（可选）"></a>三、自定义域名（可选）</h1><p>无需一级域名，二级域名也是可以的，域名的托管和注册可参考<a href="https://www.blackpumpkin.xyz/post/fa20ec4f.html">【hexo】将hexo部署到托管平台+绑定自定义域名</a>。</p><hr><h1 id="拓展阅读：Github上其他的第三方部署项目"><a href="#拓展阅读：Github上其他的第三方部署项目" class="headerlink" title="拓展阅读：Github上其他的第三方部署项目"></a>拓展阅读：Github上其他的第三方部署项目</h1><ul><li><a href="https://github.com/Chanzhaoyu/chatgpt-web">Chanzhaoyu/chatgpt-web</a></li><li><a href="https://github.com/ourongxing/chatgpt-vercel">ourongxing/chatgpt-vercel</a></li><li><a href="https://github.com/ddiu8081/chatgpt-demo">ddiu8081/chatgpt-demo</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;官网的ChatGPT对话很容易被打断，通过第三方部署可以很好的解决这个问题，并且不需要挂节点，本地网络即可访问。&lt;br&gt;参考教程：&lt;a href=&quot;https://www.fomal.cc/posts/74ac8dc8</summary>
      
    
    
    
    <category term="网络技巧" scheme="http://www.blackpumpkin.site/categories/%E7%BD%91%E7%BB%9C%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="chatgpt" scheme="http://www.blackpumpkin.site/tags/chatgpt/"/>
    
  </entry>
  
  <entry>
    <title>【New Bing】New Bing的申请流程分享</title>
    <link href="http://www.blackpumpkin.site/post/d34481fd.html"/>
    <id>http://www.blackpumpkin.site/post/d34481fd.html</id>
    <published>2023-02-21T12:16:51.000Z</published>
    <updated>2023-04-16T10:38:34.916Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>分享一下New Bing的申请流程。</p></div><h1 id="一、环境设置"><a href="#一、环境设置" class="headerlink" title="一、环境设置"></a>一、环境设置</h1><h2 id="1-节点设置"><a href="#1-节点设置" class="headerlink" title="1.节点设置"></a>1.节点设置</h2><p>同chatgpt，我们必须全程将网络环境切换成美国或加拿大的ip，否则就会出现<code>出错了。请重试。</code>字样。<br><img src="https://figure.pages.dev/post/post10/微信截图_20230220135311.png" width="400"></p><h2 id="2-Microsoft-Edge"><a href="#2-Microsoft-Edge" class="headerlink" title="2.Microsoft Edge"></a>2.Microsoft Edge</h2><p>我们需要使用Edge浏览器进入New Bing。</p><h2 id="3-ModHeader"><a href="#3-ModHeader" class="headerlink" title="3.ModHeader"></a>3.ModHeader</h2><p>在Edge点击<code>扩展</code>，搜索ModHeader插件并安装。<br>在ModHeader里，参数名称设置为<code>X-Forwarded-For</code>，参数值设置为<code>4.2.2.2</code>（微软）或<code>8.8.8.8</code>（谷歌）。</p><hr><h1 id="二、官网申请"><a href="#二、官网申请" class="headerlink" title="二、官网申请"></a>二、官网申请</h1><p>打开<a href="https://www.bing.com/new">https://www.bing.com/new</a>，点击<code>加入候补名单</code>即可。<br><img src="https://figure.pages.dev/post/post10/微信截图_20230220135545.png" width="400"></p><hr><h1 id="三、仍然报错"><a href="#三、仍然报错" class="headerlink" title="三、仍然报错"></a>三、仍然报错</h1><p>请确保自己的节点为美国或加拿大且足够稳定。如果仍然出现<code>出错了。请重试。</code>字样，则进行以下操作：</p><h2 id="1-退出Microsoft-Rewards"><a href="#1-退出Microsoft-Rewards" class="headerlink" title="1.退出Microsoft Rewards"></a>1.退出Microsoft Rewards</h2><div class="note warning flat"><p><strong>注意</strong>：如果你的reward还有用，请先将reward兑换成所需产品后后再进行操作，<strong>此操作会导致reward清零</strong>。</p></div><p>打开<a href="https://rewards.bing.com/optout?confirm=false">https://rewards.bing.com/optout?confirm=false</a>，点击<code>立即选择退出并失去我的积分</code>。<br><img src="https://figure.pages.dev/post/post10/微信截图_20230220135417.png" width="400"></p><h2 id="2-重新加入Microsoft-Rewards"><a href="#2-重新加入Microsoft-Rewards" class="headerlink" title="2.重新加入Microsoft Rewards"></a>2.重新加入Microsoft Rewards</h2><p>打开<a href="https://www.bing.com/new">https://www.bing.com/new</a>，在右上角点击奖杯，点击<code>选择加入Rewards</code>。<br><img src="https://figure.pages.dev/post/post10/微信截图_20230220135458.png" width="400"><br>重新加入reward后，退出浏览器并打开新bing申请页面。此时如果已经登录微软账号，右上角的reward会显示为0，再次申请后即可成功。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;分享一下New Bing的申请流程。&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&quot;一、环境设置&quot;&gt;&lt;a href=&quot;#一、环境设置&quot; class=&quot;headerlink&quot; title=&quot;一、环境设置&quot;&gt;&lt;/a&gt;一、环境设置&lt;</summary>
      
    
    
    
    <category term="网络技巧" scheme="http://www.blackpumpkin.site/categories/%E7%BD%91%E7%BB%9C%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="new_bing" scheme="http://www.blackpumpkin.site/tags/new-bing/"/>
    
  </entry>
  
  <entry>
    <title>【ChatGPT】ChatGPT的注册流程分享</title>
    <link href="http://www.blackpumpkin.site/post/8ee3673d.html"/>
    <id>http://www.blackpumpkin.site/post/8ee3673d.html</id>
    <published>2023-02-15T02:26:40.000Z</published>
    <updated>2023-04-16T10:52:46.328Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>最近ChatGPT又火起来了，各家网络巨头纷纷炒作人工智能大行其道，不过博主记得ChatGPT在去年11月份其实就已经开始应用了。这里博主就来分享一下ChatGPT的注册流程。</p></div><h1 id="零、环境设置"><a href="#零、环境设置" class="headerlink" title="零、环境设置"></a>零、环境设置</h1><h2 id="1-节点"><a href="#1-节点" class="headerlink" title="1.节点"></a>1.节点</h2><p>我们必须全程将网络环境切换成美国或加拿大的ip，<font color=red>香港、日本等节点均无法完成</font>，否则我们会看到以下内容，说明拒绝登录：<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210145253.png" width="400"></p><h2 id="2-本地时间"><a href="#2-本地时间" class="headerlink" title="2.本地时间"></a>2.本地时间</h2><p>以windows11为例，电脑打开<code>设置</code>——<code>时间和语言</code>——<code>日期和时间</code>，将<code>时区</code>改为<code>(UTC-05:00)东部时间(美国和加拿大)</code>。<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210153744.png" width="400"></p><hr><h1 id="一、邮箱注册OpenAI"><a href="#一、邮箱注册OpenAI" class="headerlink" title="一、邮箱注册OpenAI"></a>一、邮箱注册OpenAI</h1><p>我们打开OpenAI的官网<a href="https://openai.com/">https://openai.com/</a>，左下角点击<code>ChatGPT</code>，点击<code>TRY CHATGPT</code>，弹出以下界面：<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210145113.png" width="400"><br>点击<code>Sign up</code>，输入我们的邮箱，点击<code>Continue</code>。<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210145630.png" width="400"><br>显示以下内容表示官网向我们的邮箱发送成功，我们进入邮箱找到激活邮件。<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210150237.png" width="400"><br>此时我们返回<a href="https://chat.openai.com/">https://chat.openai.com/</a>，点击<code>Sign up</code>，重复输入邮箱注册，出现以下提示表示我们已注册成功：<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210151741.png" width="400"><br>返回<a href="https://chat.openai.com/">https://chat.openai.com/</a>，这次我们点击<code>Log in</code>，输入邮箱进入，会出现以下内容：<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210155533.png" width="400"><br>输入姓名，点击<code>Continue</code>。<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210160000.png" width="400"><br>我们需要手机号接受验证码，但是目前ChatGPT不支持中国大陆手机号，于是我们需要接码平台。</p><hr><h1 id="二、接收手机验证码"><a href="#二、接收手机验证码" class="headerlink" title="二、接收手机验证码"></a>二、接收手机验证码</h1><p>我们以SMS-Activate为例。<br>进入<a href="https://sms-activate.org/">https://sms-activate.org/</a>，注册账号后点击右上角<code>余额</code>——<code>充值</code>——<code>支付宝</code>，充值1美元即可。<br>返回主页，在左下角选择<code>OpenAI</code>，在<code>按国家分类</code>处选择摩尔多瓦等国即可开始接收验证码。<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210160747.png" width="400"><br><img src="https://figure.pages.dev/post/post8/QQ截图20230210160757.png" width="400"><br>此时会显示手机号，我们填入到之前的页面中，点击<code>Send code</code>，在接码平台即可接收到验证码。<br>填写验证码后继续，我们便完成了注册流程，此时我们可以把电脑的时区改回东八区了。<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210161429.png" width="400"></p>]]></content>
    
    
    <summary type="html">分享一下ChatGPT的注册流程。</summary>
    
    
    
    <category term="网络技巧" scheme="http://www.blackpumpkin.site/categories/%E7%BD%91%E7%BB%9C%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="chatgpt" scheme="http://www.blackpumpkin.site/tags/chatgpt/"/>
    
  </entry>
  
  <entry>
    <title>【hexo】图床的使用</title>
    <link href="http://www.blackpumpkin.site/post/d6899135.html"/>
    <id>http://www.blackpumpkin.site/post/d6899135.html</id>
    <published>2023-02-11T03:35:13.000Z</published>
    <updated>2023-04-16T10:36:06.329Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>使用图床可以给服务器减轻压力，对于网站的访问也会提高一定的速度。</p></div><h1 id="一、基于Github仓库的图床"><a href="#一、基于Github仓库的图床" class="headerlink" title="一、基于Github仓库的图床"></a>一、基于Github仓库的图床</h1><div class="note info flat"><p>Github仓库的好处是，不光是图片，音频、视频等文件也可以进行上传。</p></div><h2 id="1-新建仓库"><a href="#1-新建仓库" class="headerlink" title="1.新建仓库"></a>1.新建仓库</h2><p>点击<code>New Repository</code>，创建一个新的仓库，仓库名字随意。点击<code>Create Repository</code>完成创建。</p><h2 id="2-克隆仓库"><a href="#2-克隆仓库" class="headerlink" title="2.克隆仓库"></a>2.克隆仓库</h2><p>在仓库页面内点击绿色按钮<code>&lt;&gt;code</code>——<code>Local</code>——<code>SSH</code>，其中的SSH链接如下：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:XXX/YYY.git</span><br></pre></td></tr></table></figure><br>XXX为Github名称，YYY为仓库名称。这便是我们需要的仓库信息，复制下来。<br>在本地建立一个空文件夹，右键打开<code>Git Bash</code>，直接粘贴上述链接，回车执行。</p><h2 id="3-上传图片"><a href="#3-上传图片" class="headerlink" title="3.上传图片"></a>3.上传图片</h2><p>在我们把图片复制到仓库文件夹后，我们执行以下命令：</p><h3 id="3-0-对远程仓库进行修改"><a href="#3-0-对远程仓库进行修改" class="headerlink" title="3.0 对远程仓库进行修改"></a>3.0 对远程仓库进行修改</h3><p>如果我们在别的平台对仓库进行过修改（如使用过PicGo等图床上传软件导致远程仓库与本地仓库不同步），我们需要在执行前先将远程仓库与本地仓库同步：<br><code>git pull</code></p><h3 id="3-1-将文件加入到暂存区"><a href="#3-1-将文件加入到暂存区" class="headerlink" title="3.1 将文件加入到暂存区"></a>3.1 将文件加入到暂存区</h3><p><code>git add .</code><br>（注意有一个小点）</p><h3 id="3-2将暂存区文件加入到本地仓库"><a href="#3-2将暂存区文件加入到本地仓库" class="headerlink" title="3.2将暂存区文件加入到本地仓库"></a>3.2将暂存区文件加入到本地仓库</h3><p><code>git commit -m &quot;message&quot;</code><br>message为需要注释的内容，可以改为任意内容，但最好是可以描述文件本身作用的信息。</p><h3 id="3-3将本地仓库上传到远程仓库"><a href="#3-3将本地仓库上传到远程仓库" class="headerlink" title="3.3将本地仓库上传到远程仓库"></a>3.3将本地仓库上传到远程仓库</h3><p><code>git push</code></p><h2 id="4-查看仓库内图片"><a href="#4-查看仓库内图片" class="headerlink" title="4.查看仓库内图片"></a>4.查看仓库内图片</h2><p>打开在仓库内的图片，可以发现地址为<code>https://github.com/&#123;用户名&#125;/&#123;图床仓库名&#125;/blob/main/&#123;图片文件夹&#125;/&#123;图片名称&#125;</code><br>{用户名}、{图床仓库名}、{图片文件夹}、{图片名称}等均改为我们自己的名称。<br>我们将其中的blob改为raw，即为我们需要图片的地址。<br>也可以选择github用来存储用户上传文件的服务地址：<br><code>https://raw.githubusercontent.com/&#123;用户名&#125;/&#123;图床仓库名&#125;/main/&#123;图片文件夹&#125;/&#123;图片名称&#125;</code></p><h2 id="5-CDN部署加速"><a href="#5-CDN部署加速" class="headerlink" title="5.CDN部署加速"></a>5.CDN部署加速</h2><h3 id="5-1-Cloudflare"><a href="#5-1-Cloudflare" class="headerlink" title="5.1 Cloudflare"></a>5.1 Cloudflare</h3><p>打开<code>Pages</code>——<code>创建项目</code>——<code>连接到Git</code>，选择我们的图库，创建项目后会给出一个域，形如<code>aaa-bbb-ccc.pages.dev</code><br>我们在上述域后面添加内容 /{图片文件夹}/{图片名称}，用浏览器进入，即为我们需要图片的地址。</p><h3 id="5-2-jsdelivr"><a href="#5-2-jsdelivr" class="headerlink" title="5.2 jsdelivr"></a>5.2 jsdelivr</h3><div class="note warning flat"><p>经验证，jsd目前已被墙，5.2方法已失效。</p></div><p>将仓库内图片的地址改为<code>https://cdn.jsdelivr.net/gh/&#123;github用户名&#125;/&#123;图床仓库名&#125;@&#123;仓库分支&#125;/&#123;图片文件夹&#125;/&#123;图片名称&#125;</code><br>其中仓库分支一般为main</p><h3 id="5-3-Staticaly"><a href="#5-3-Staticaly" class="headerlink" title="5.3 Staticaly"></a>5.3 Staticaly</h3><p>将仓库内图片的地址改为<code>https://cdn.staticaly.com/gh/&#123;github用户名&#125;/&#123;图床仓库名&#125;@&#123;仓库分支&#125;/&#123;图片文件夹&#125;/&#123;图片名称&#125;</code></p><h3 id="5-4-Vercel、Netlify等托管平台"><a href="#5-4-Vercel、Netlify等托管平台" class="headerlink" title="5.4 Vercel、Netlify等托管平台"></a>5.4 Vercel、Netlify等托管平台</h3><p>我们需要完成自定义二级域名并进行解析（参考绑定自定义域名内容）。<br>将仓库内图片的地址改为<code>&#123;自定义域名&#125;/&#123;图片文件夹&#125;/&#123;图片名称&#125;</code></p><hr><h1 id="二、第三方图床"><a href="#二、第三方图床" class="headerlink" title="二、第三方图床"></a>二、第三方图床</h1><p>这部分图床（如SMMS）的搭建门槛较低，所以速度和稳定性良莠不齐，可以多搜索一些使用。</p><hr><h1 id="三、论坛图床"><a href="#三、论坛图床" class="headerlink" title="三、论坛图床"></a>三、论坛图床</h1><p>博主在以前玩舰c的时候混过一段时间NGA舰版，版内有一个“<a href="https://bbs.nga.cn/read.php?tid=7622707">图床专用集中贴</a>”，可以在贴内上传图片，然后复制图片的链接即可作为外链使用，即使帖子被冲水也不会影响。实际上，任何的论坛，都是可以当作图床的，只是非常的不稳定。</p><hr><h1 id="拓展阅读：使用vscode直接上传到远程仓库"><a href="#拓展阅读：使用vscode直接上传到远程仓库" class="headerlink" title="拓展阅读：使用vscode直接上传到远程仓库"></a>拓展阅读：使用vscode直接上传到远程仓库</h1><div class="note info flat"><p>在git bash中逐一输入<code>git add .</code>等命令实在是过于繁琐，因此我们可以使用vscode一键上传到远程仓库。</p></div><h2 id="1-链接github"><a href="#1-链接github" class="headerlink" title="1.链接github"></a>1.链接github</h2><p>此步骤在我们创建hexo时就已经进行完毕（git config、设置ssh等），因此可直接跳过。</p><h2 id="2-克隆仓库-1"><a href="#2-克隆仓库-1" class="headerlink" title="2.克隆仓库"></a>2.克隆仓库</h2><p>参考本文第一章第二节。</p><h2 id="3-vscode设置"><a href="#3-vscode设置" class="headerlink" title="3.vscode设置"></a>3.vscode设置</h2><p>打开vscode，<code>文件</code>——<code>打开文件夹</code>，选择我们克隆到本地的仓库文件夹。<br>细心的你会发现，仓库内有一个<code>.git</code>文件夹，这便是我们远程仓库的信息，我们称做Git仓库(Git Repository)。<br>我们将需要上传的图片直接放入仓库文件夹内，随后我们会看到，vscode左侧的源代码管理会发生变化。<br>打开<code>源代码管理</code>，直接提交即可。<br>*如果一直在转圈，说明设置的默认选项影响了commit，当我们在commit却不添加任何消息时，会默认生成一个文件来替代消息并提交，而服务器无法接受这样的消息。<br>在设置内找到<code>Git: Use Editor As Commit Input</code>，取消勾选即可。<br><div class="note default flat"><p><a href="https://blog.csdn.net/Er_Studying_Bai/article/details/128088429">git bash可以正常commit，但是 VSCode 里不能正常commit使用的解决方法</a></p></div></p>]]></content>
    
    
    <summary type="html">使用图床可以给服务器减轻压力，对于网站的访问也会提高一定的速度。</summary>
    
    
    
    <category term="博客技巧" scheme="http://www.blackpumpkin.site/categories/%E5%8D%9A%E5%AE%A2%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="hexo" scheme="http://www.blackpumpkin.site/tags/hexo/"/>
    
    <category term="博客技巧" scheme="http://www.blackpumpkin.site/tags/%E5%8D%9A%E5%AE%A2%E6%8A%80%E5%B7%A7/"/>
    
    <category term="github" scheme="http://www.blackpumpkin.site/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>【hexo】hexo提交到搜索引擎收录</title>
    <link href="http://www.blackpumpkin.site/post/eb7308cc.html"/>
    <id>http://www.blackpumpkin.site/post/eb7308cc.html</id>
    <published>2023-02-07T03:16:32.000Z</published>
    <updated>2023-04-16T10:38:01.656Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、生成站点地图"><a href="#一、生成站点地图" class="headerlink" title="一、生成站点地图"></a>一、生成站点地图</h1><p>在终端输入以下内容并回车：<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><br>在_config.yml文件添加以下内容：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 自动生成sitemap</span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br></pre></td></tr></table></figure><br>然后在git工具中三连：<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</code><br>此时，进入<strong>public</strong>目录，发现里面有<strong>sitemap.xml</strong>和<strong>baidusitemap.xml</strong>文件，这就是生成的站点地图。里面包含了网站上所有页面的链接，搜索引擎通过这个文件来抓取网站页面。</p><hr><h1 id="二、搜索引擎收录"><a href="#二、搜索引擎收录" class="headerlink" title="二、搜索引擎收录"></a>二、搜索引擎收录</h1><h2 id="1-百度"><a href="#1-百度" class="headerlink" title="1.百度"></a>1.百度</h2><p>访问<a href="https://ziyuan.baidu.com/">百度搜索资源平台官网</a>，选择<code>用户中心</code>——<code>站点管理</code>，点击<code>添加网址</code>，我们依次进行<code>输入网站</code>——<code>站点属性</code>——<code>验证网站</code>，其中第三步验证网站需要我们进行验证。<br><div class="note warning flat"><p>【公告】站点验证暂停CNAME验证的通知<br>亲爱的搜索开发者<br>近期百度搜索资源平台策略调整，站点管理-验证网站暂停【CNAME验证】的方式。该调整对已完成验证的站点没有影响，若站点未验证或验证过期，可以选择使用【文件验证】、【HTML标签验证】方式进行站点验证。<br>给您带来的不便敬请谅解！<br>发布日期：2023-01-13<br>来自<a href="https://ziyuan.baidu.com/wiki/3462">https://ziyuan.baidu.com/wiki/3462</a></p></div><br>我们选择<code>HTML标签验证</code>，发现我们需要添加代码进行验证：<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML标签验证</span></span><br><span class="line"><span class="comment">将以下代码添加到您的网站首页HTML代码的&lt;head&gt;标签与&lt;/head&gt;标签之间，完成操作后请点击“验证”按钮。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;baidu-site-verification&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&#123;your content&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 查看示例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;baidu-site-verification&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&#123;your content&#125;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>My title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    page contents</span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 为保持验证通过的状态,成功验证后请不要删除该标签 --&gt;</span></span><br></pre></td></tr></table></figure><br>其中{your content}为百度提示我们插入的content值。<br>由于我使用的butterfly主题文件自带了站长验证功能，因此打开<strong>_config.butterfly.yml</strong>，找到<code>site_verification</code>行进行修改即可（{your content}需要进行替换）：<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Verification (站長驗證)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="attr">site_verification:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">baidu-site-verification</span></span><br><span class="line">    <span class="attr">content:</span> &#123;<span class="string">your</span> <span class="string">content</span>&#125;</span><br></pre></td></tr></table></figure><br>点<code>完成验证</code>即可验证成功。<br>重新进入站点管理（站点属性设置），点击<code>普通收录</code>——<code>sitemap</code>，在<code>请填写数据文件地址</code>输入以下内容：<br><figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">www.blackpumpkin.xyz/sitemap.xml</span><br><span class="line">www.blackpumpkin.xyz/baidusitemap.xml</span><br></pre></td></tr></table></figure><br>点击<code>提交</code>即可完成。</p><h2 id="2-谷歌"><a href="#2-谷歌" class="headerlink" title="2.谷歌"></a>2.谷歌</h2><p>访问<a href="https://search.google.com/search-console/welcome">Google Search Console</a>，在<code>网域</code>中填入自己的博客网址，点击<code>前往资源页面</code>——<code>站点地图</code>——<code>添加新的站点地图</code>，把上述文件地址提交即可。</p><h2 id="3-必应"><a href="#3-必应" class="headerlink" title="3.必应"></a>3.必应</h2><p>访问<a href="https://www.bing.com/webmasters/about">Webmaster Tools</a>，登录自己的微软账户后，我们发现必应有两种导入方式，一种是<code>手动添加网站</code>，另一种是<code>从GSC导入你的网站</code>，如果我们已经使用谷歌提交过，我们便可以无需验证，直接使用谷歌导入了。<br>点击<code>网站地图</code>——<code>提交网站地图</code>，把上述文件地址提交即可。</p><h2 id="4-其他"><a href="#4-其他" class="headerlink" title="4.其他"></a>4.其他</h2><p>如360搜索、搜狗搜索等，与百度的操作相同。下面只列举出各搜索引擎对应的站长平台。<br>| 搜索引擎 | 代码验证 | 文件验证 | CNAME验证 | 站长平台 | 其他 |<br>| :——-: | :——-: | :——-: | :——-: | :——-: | :——-: |<br>| 搜狗 | √ | √ | × | <a href="https://zhanzhang.sogou.com/">https://zhanzhang.sogou.com/</a> | 个人无法验证 |<br>| 360 | √ | √ | √ | <a href="https://zhanzhang.so.com/">https://zhanzhang.so.com/</a> | 暂无 |<br>| 今日头条 | √ | √ | × | <a href="https://zhanzhang.toutiao.com/">https://zhanzhang.toutiao.com/</a> | 暂无 |<br>| 神马站长平台 | √ | √ | × | <a href="https://zhanzhang.sm.cn/">https://zhanzhang.sm.cn/</a> | 个人无法验证 |<br>| yandex | √ | √ | × | <a href="https://zhanzhang.sm.cn/">https://zhanzhang.sm.cn/</a> | 支持DNS验证 |</p>]]></content>
    
    
    <summary type="html">将hexo提交到搜索引擎收录。</summary>
    
    
    
    <category term="博客技巧" scheme="http://www.blackpumpkin.site/categories/%E5%8D%9A%E5%AE%A2%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="hexo" scheme="http://www.blackpumpkin.site/tags/hexo/"/>
    
    <category term="博客技巧" scheme="http://www.blackpumpkin.site/tags/%E5%8D%9A%E5%AE%A2%E6%8A%80%E5%B7%A7/"/>
    
    <category term="SEO" scheme="http://www.blackpumpkin.site/tags/SEO/"/>
    
  </entry>
  
  <entry>
    <title>【hexo】将hexo部署到托管平台+绑定自定义域名</title>
    <link href="http://www.blackpumpkin.site/post/fa20ec4f.html"/>
    <id>http://www.blackpumpkin.site/post/fa20ec4f.html</id>
    <published>2023-02-07T03:10:22.000Z</published>
    <updated>2024-01-29T21:43:18.520Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、将hexo部署到Vercel"><a href="#一、将hexo部署到Vercel" class="headerlink" title="一、将hexo部署到Vercel"></a>一、将hexo部署到Vercel</h1><div class="note info flat"><p>Vercel是一个代码托管平台，能够用来部署前端应用，此处我们用它来托管hexo的静态html界面，达到无需购买服务器的目的。</p></div><h2 id="1-创建Vercel账号"><a href="#1-创建Vercel账号" class="headerlink" title="1.创建Vercel账号"></a>1.创建Vercel账号</h2><p>官方网站注册即可：<a href="https://vercel.com/">https://vercel.com/</a><br>此处建议直接使用我们的Github账号进行注册/关联，这样我们可以直接在Vercel中找到我们的GitHub库中的项目。</p><h2 id="2-对项目进行托管"><a href="#2-对项目进行托管" class="headerlink" title="2.对项目进行托管"></a>2.对项目进行托管</h2><p>依次点击右上角<code>Add New…</code>——<code>Project</code>，在<code>Import Git Repository</code>内选择我们创建的{username}.github.io项目，点击<code>Import</code>，表示导入我们的Github项目。<br><img src="https://figure.pages.dev/post/post1/1-1.png" width="400"><br>随后，我们在<strong>Project Name</strong>中起一个只有字母、数字或者或者连字符的项目名称，其他的不用变，点击 <code>Deploy</code>。<br><img src="https://figure.pages.dev/post/post1/1-2.png" width="400"><br>我们打开 <code>&#123;ProjectName&#125;.vercel.app</code>(其中{ProjectName}为我们上面项目起的名称)，发现打开后为我们的博客主页，证明我们已经部署成功！（由于目前Vercel被墙，可能需要挂节点进行确认）</p><hr><h1 id="二、绑定自定义域名"><a href="#二、绑定自定义域名" class="headerlink" title="二、绑定自定义域名"></a>二、绑定自定义域名</h1><div class="note info flat"><p>这一步并非必要，如果目前还不想买域名可以先跳过。</p></div><h2 id="1-购买域名"><a href="#1-购买域名" class="headerlink" title="1.购买域名"></a>1.购买域名</h2><p>（略）<br>可先使用<a href="https://www.freenom.com/zh/index.html?lang=zh">freenom</a>申请一个免费域名。</p><h2 id="2-添加解析"><a href="#2-添加解析" class="headerlink" title="2.添加解析"></a>2.添加解析</h2><p>在Vercel中进入我们上文中创建好的项目，点击右上角的 <code>View Domains</code>，我们可以看到已经创建好的 <code>&#123;ProjectName&#125;.vercel.app</code>，我们的目标是将自己购买的域名绑定到这个项目中。<br>在<code>Domains</code>内添加我们购买的域名（以我的域名 <code>blackpumkpin.xyz/</code>为例），然后会提示我们是否重定向至 <code>www.blackpumkpin.xyz/</code>，我们选择 <code>ADD</code>。<br><img src="https://figure.pages.dev/post/post1/1-3.png" width="400"><br>然后我们需要添加以下两条解析记录：</p><div class="table-container"><table><thead><tr><th style="text-align:center">Type</th><th style="text-align:center">Name</th><th style="text-align:center">Value</th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:center">@</td><td style="text-align:center">76.76.21.21</td></tr><tr><td style="text-align:center">CNAME</td><td style="text-align:center">www</td><td style="text-align:center">cname.vercel-dns.com.</td></tr></tbody></table></div><p>此时我们返回域名商的控制台，进入DNS管理，添加上述两条解析即可。<br>如果我们想要自定义二级域名，我们可以使用CNAME解析，在Name处添加我们想要的自定义二级域名即可。</p><h2 id="3-修改配置文件"><a href="#3-修改配置文件" class="headerlink" title="3.修改配置文件"></a>3.修改配置文件</h2><p>打开_config.yml，在<strong>URL</strong>行修改自己的url为自己的自定义域名。</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://www.blackpumpkin.xyz</span></span><br></pre></td></tr></table></figure><hr><h1 id="三、其他托管平台"><a href="#三、其他托管平台" class="headerlink" title="三、其他托管平台"></a>三、其他托管平台</h1><h2 id="1-Netlify"><a href="#1-Netlify" class="headerlink" title="1.Netlify"></a>1.Netlify</h2><p><a href="https://app.netlify.com/">Netlify</a>的速度据说比Vercel快一些。<br>操作步骤与Vercel基本一致，都是通过关联自己的github账户来导入我们的{username}.github.io项目，完成后我们会获得一个形如<code>xxx.netlify.app</code>的链接，打开后为我们的博客主页，证明我们已经部署成功。<br>绑定自定义域名的操作也是相同的，只是解析记录有所区别，随后进入域名商控制台的DNS管理，添加上述解析即可。（自定义二级域名的操作相同，不再赘述）</p><h2 id="2-4EVERLAND"><a href="#2-4EVERLAND" class="headerlink" title="2.4EVERLAND"></a>2.4EVERLAND</h2><p><a href="https://4everland.org/">4EVERLAND</a>是一个集存储、计算、网络核心能力为一体的Web 3.0云计算平台。<br>使用github账户注册，导入hexo博客项目的存储库，选择ipfs，设置完成后点击<code>deploy</code>，完成后我们会获得一个形如<code>xxx.ipfs.4everland.io</code>的链接，打开后为我们的博客主页，证明我们已经部署成功。<br>进入<code>Projects</code>——<code>Settings</code>——<code>Domains</code>，添加自己的域名即可。</p><h2 id="3-RailWay"><a href="#3-RailWay" class="headerlink" title="3.RailWay"></a>3.RailWay</h2><p><a href="https://railway.app/">RailWay</a>部署方式与上述托管平台几乎相同，此处不再赘述。</p><hr><h1 id="拓展阅读：将二级域名部署到不同的托管平台"><a href="#拓展阅读：将二级域名部署到不同的托管平台" class="headerlink" title="拓展阅读：将二级域名部署到不同的托管平台"></a>拓展阅读：将二级域名部署到不同的托管平台</h1><p>如果我们已经使用Vercel将主域名进行了部署，那么我们也可以使用其他的平台对二级域名进行部署。</p><div class="table-container"><table><thead><tr><th style="text-align:center">Type</th><th style="text-align:center">Name</th><th style="text-align:center">Value</th><th style="text-align:center">备注</th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:center">@</td><td style="text-align:center">76.76.21.21</td><td style="text-align:center">Vercel部署的主域名A解析</td></tr><tr><td style="text-align:center">CNAME</td><td style="text-align:center">www</td><td style="text-align:center">cname.vercel-dns.com.</td><td style="text-align:center">Vercel部署的主域名CNAME解析</td></tr><tr><td style="text-align:center">CNAME</td><td style="text-align:center">{netlify}</td><td style="text-align:center">{xxx}.netlify.app</td><td style="text-align:center">Netlify部署的二级域名CNAME解析</td></tr><tr><td style="text-align:center">CNAME</td><td style="text-align:center">{4everland}</td><td style="text-align:center">{xxx}.cname.ddnsweb3.com</td><td style="text-align:center">4EVERLAND部署的二级域名CNAME解析</td></tr><tr><td style="text-align:center">CNAME</td><td style="text-align:center">{railway}</td><td style="text-align:center">{xxx}.railway.app</td><td style="text-align:center">RailWay部署的二级域名CNAME解析</td></tr></tbody></table></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、将hexo部署到Vercel&quot;&gt;&lt;a href=&quot;#一、将hexo部署到Vercel&quot; class=&quot;headerlink&quot; title=&quot;一、将hexo部署到Vercel&quot;&gt;&lt;/a&gt;一、将hexo部署到Vercel&lt;/h1&gt;&lt;div class=&quot;note </summary>
      
    
    
    
    <category term="博客技巧" scheme="http://www.blackpumpkin.site/categories/%E5%8D%9A%E5%AE%A2%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="hexo" scheme="http://www.blackpumpkin.site/tags/hexo/"/>
    
    <category term="博客技巧" scheme="http://www.blackpumpkin.site/tags/%E5%8D%9A%E5%AE%A2%E6%8A%80%E5%B7%A7/"/>
    
    <category term="Vercel" scheme="http://www.blackpumpkin.site/tags/Vercel/"/>
    
    <category term="自定义域名" scheme="http://www.blackpumpkin.site/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>分享一种可以给外服手游氪金的卡种——美国运通借记卡</title>
    <link href="http://www.blackpumpkin.site/post/6c05f09f.html"/>
    <id>http://www.blackpumpkin.site/post/6c05f09f.html</id>
    <published>2023-02-03T14:06:41.000Z</published>
    <updated>2023-02-25T20:19:30.745Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>最近碧蓝档案日服开始了两周年的活动，在国内也是出圈了一小波，为师是十分的欣慰啊！不过在nga和贴吧看到很多日服的sensei不了解应该如何氪金，于是论坛上的很多人都推荐去办一张国外的信用卡/储蓄卡。<br>在此，我分享一种除visa外，可以进行外服游戏充值的卡种——美国运通借记卡。</p></div><div class="note default flat"><p>本文已同步至nga蔚蓝档案板块<a href="https://bbs.nga.cn/read.php?tid=35268602">同名贴</a>，可综合各楼层回复排查出现的问题。</p></div><h1 id="一、国内对外服游戏氪金的方式"><a href="#一、国内对外服游戏氪金的方式" class="headerlink" title="一、国内对外服游戏氪金的方式"></a>一、国内对外服游戏氪金的方式</h1><p>我们都知道，想要给外服游戏充值，大多数我们日常使用的支付方式（支付宝、微信等）都是不起作用的。于是，排除肉身前往国外这种简单粗暴的方式后，我们需要找到一些媒介去处理：</p><h2 id="1-国外（或港澳台）友人帮助"><a href="#1-国外（或港澳台）友人帮助" class="headerlink" title="1.国外（或港澳台）友人帮助"></a>1.国外（或港澳台）友人帮助</h2><p>这种方式的靠谱程度与你认识友人的靠谱程度完全相关，一般来说，帮助你进行氪金操作的人分为两种，一种是你现实生活中在国外生活的同学、亲戚，这种可以说是非常方便的，一身轻松；另外一种是自己所在的社区、QQ群等较有威望的大佬或好心人，这种就需要你进行一定程度的甄别，另外他们可能会收取一定的辛苦费，建议先和通过他人帮助过的人咨询一下是否安全、合理。<br>便捷程度：⭐⭐⭐<br>靠谱程度：⭐⭐⭐⭐<br>氪金程度：⭐⭐</p><h2 id="2-商家代充"><a href="#2-商家代充" class="headerlink" title="2.商家代充"></a>2.商家代充</h2><p>tb上有很多的商家会帮助你进行代充，但是翻车概率是这几种方式中最大的，因为有的黑心商家会使用黑卡进行充值，而黑卡是一定会被封号的。简单来说，黑卡就是不良商家盗刷他人的信用卡进行充值，当持卡人发现盗刷后会要求退款，这样游戏厂商就收不到钱了，等于黑心商家空手套白狼，而玩家的账号就会被惩罚，轻则回收充值道具，重则封号。不光是BA，但凡是个游戏社区，因为代充而引起争端的帖子都是一大堆，这需要玩家找代充的时候擦亮眼睛，多在社区搜索一下商家的名称有没有坑，谨防黑心商家！<br>另外一点，即使是正规、好评如潮的商家，他们店铺的代充也不一定是优惠的，（这是肯定的，毕竟商家也是要吃饭的）比如你想要在一个游戏里充值1000日元，然后拿出汇率计算器算得大约相当于人民币52元，这时你发现，商家的1000日元商品售价一般在60元以上。（截取自tb某商家价目表）<br><img src="https://figure.pages.dev/post/post4/post4_1.png" width="400"><br><br>便捷程度：⭐⭐⭐⭐<br>靠谱程度：⭐⭐<br>氪金程度：⭐⭐⭐</p><h2 id="3-google-play直充"><a href="#3-google-play直充" class="headerlink" title="3.google play直充"></a>3.google play直充</h2><p>google play直充可以说是非常的便捷了，拿出手机便可一键支付，并且安全性非常有保障。这是我最为推荐的支付方式。<br>便捷程度：⭐⭐⭐⭐<br>靠谱程度：⭐⭐⭐⭐⭐<br>氪金程度：⭐</p><hr><h1 id="二、为什么你需要一张国外银行卡？"><a href="#二、为什么你需要一张国外银行卡？" class="headerlink" title="二、为什么你需要一张国外银行卡？"></a>二、为什么你需要一张国外银行卡？</h1><p>很多朋友在登陆账号时大概率会想到google play里直接进行氪金，但受限于大陆的特殊机制，我们是无法直接进行氪金的。<br>我们打开play商店，依次选择头像——付款和订阅——付款方式，可以看到有四种方式进行氪金：<br><img src="https://figure.pages.dev/post/post4/post4_2.png" width="400"><br><br>我们依次分析这四种方式。</p><h2 id="1-添加信用卡或借记卡"><a href="#1-添加信用卡或借记卡" class="headerlink" title="1.添加信用卡或借记卡"></a>1.添加信用卡或借记卡</h2><p><img src="https://figure.pages.dev/post/post4/post4_3.png" width="400"><br><br>这种方式只支持国外的银行卡，国内的是不支持的，如果你把国内的银行卡输入进去，会显示“付款方式无效或不受支持”。</p><h2 id="2-添加PayPal"><a href="#2-添加PayPal" class="headerlink" title="2.添加PayPal"></a>2.添加PayPal</h2><p><img src="https://figure.pages.dev/post/post4/post4_4.png" width="400"><br><br>如果你有国外的手机号，你可以尝试一下。我这里只有国内的手机号，输入邮箱和手机号后，会弹出“国家或地区目前不受支持”的提示。<br><img src="https://figure.pages.dev/post/post4/post4_5.png" width="400"><br></p><h2 id="3-兑换代码"><a href="#3-兑换代码" class="headerlink" title="3.兑换代码"></a>3.兑换代码</h2><p><img src="https://figure.pages.dev/post/post4/post4_6.png" width="400"><br><br>这种方式是要求你输入google paly自家出品的礼品卡。实际上，礼品卡的获取方式与第一章的氪金方式是复合的，即你想要在国内买到礼品卡，你大概率还是需要用到朋友或者店铺帮忙，因此此方法不做详细介绍。</p><h2 id="4-在便利店购买google-play抵用金"><a href="#4-在便利店购买google-play抵用金" class="headerlink" title="4.在便利店购买google play抵用金"></a>4.在便利店购买google play抵用金</h2><p><img src="https://figure.pages.dev/post/post4/post4_7.png" width="400"><br><br>这种方式是在要求你拥有合格的银行卡后，从银行卡先氪金到你的Google账户，然后可以从账户直接氪金到你的游戏里（可以理解为steam充值卡）。但你想要使用这种方式，不还是需要一张能用的卡吗！此方法不做详细介绍。<br>综上所述，你需要一张对于google play来说合法的一张银行卡（借记卡/信用卡）。这就引入到了我们今天的主题——申请一张美国运通的借记卡。</p><hr><h1 id="三、美国运通借记卡的特点"><a href="#三、美国运通借记卡的特点" class="headerlink" title="三、美国运通借记卡的特点"></a>三、美国运通借记卡的特点</h1><p>其实在nga和贴吧，我已经看到了很多大佬们分享的国外银行卡申请教程了，可以说写的是非常的贴心了。不过我发现，这些一般都是visa家的信用卡，而因为个人原因，对于信用卡，其实我是比较抵触的。这里我便分享一种国外的<strong>借记卡</strong>：美国运通。<br><img src="https://figure.pages.dev/post/post4/post4_8.png" width="400"><br><br>这里介绍一下美国运通的优点：</p><ul><li>免费申请，无手续费</li><li>卡种为借记卡，无需担心年费、征信等问题</li><li>无需手动购汇，即不需要将人民币兑换成外币这一步操作</li></ul><p>然后再来说一下缺点吧：</p><ul><li>卡种较为小众</li><li>申请银行为兴业银行，网点可能较少（据了解，广发银行也有相关业务，但我不太了解就不做过多介绍了）</li><li>卡种为借记卡，不是信用卡（这一点尤为重要！下文会对这点进行说明）</li></ul><hr><h1 id="四、办理流程"><a href="#四、办理流程" class="headerlink" title="四、办理流程"></a>四、办理流程</h1><h2 id="0-办理前的准备"><a href="#0-办理前的准备" class="headerlink" title="0.办理前的准备"></a>0.办理前的准备</h2><p>1.我们需要记住一点，这张卡是借记卡而非信用卡，不能透支消费，我们要先存钱进去，在支付后会冻结这笔钱(1-2天)，等到款项进入商家账户之后才会完成结算流程。在结算完毕之前，建议不要动用这张卡进行任何消费。</p><p>2.兴业银行比较小众，所以我们最好打开地图查看一下，你在的附近是否有兴业的网点。</p><h2 id="1-网申银行卡"><a href="#1-网申银行卡" class="headerlink" title="1.网申银行卡"></a>1.网申银行卡</h2><p>我们下载兴业银行app，注册账号，搜索办卡——申请借记卡——热卡提前到手，我们会在里面发现有“美国运通标准借记卡”和“美国运通安愉借记卡”，这里我们选择标准借记卡（安愉有很多的限制，好像是发给50岁以上的人），点击立即申请，会出现填写姓名、身份证等信息的页面，我们如实填写（见下图）。<br><img src="https://figure.pages.dev/post/post4/post4_9.png" width="400"><br><br>提交后，我们的手机上会接收到以下短消息：<br><img src="https://figure.pages.dev/post/post4/post4_10.png" width="400"><br><br>证明我们已申请成功，只需等待制卡完成后邮寄到你的居住地即可，一般需要一周左右的时间。</p><h2 id="2-网点激活"><a href="#2-网点激活" class="headerlink" title="2.网点激活"></a>2.网点激活</h2><p>收到邮件后，我们会看到以下内容：<br><img src="https://figure.pages.dev/post/post4/post4_11.png" width="400"><br><br>我们连卡带纸，<strong>以及自己的身份证</strong>，全都拿去兴业银行的线下网点，和营业厅的大堂经理说一下激活银行卡，他会带我们去终端机填开户的单子、拍人脸等操作，我们按照流程一一走完。<br>流程走完后，我们打开手机上的兴业银行app，绑定我们的银行卡，线下部分就算大功告成了！</p><h2 id="3-绑定google-play"><a href="#3-绑定google-play" class="headerlink" title="3.绑定google play"></a>3.绑定google play</h2><p>打开google play，点击头像——付款和订阅——付款方式——添加信用卡或借记卡，我们输入卡号等信息，点击保存即可。</p><p>2.4更新：关于地址信息，这个看你玩的是日服还是国际服，日服就填一个日本的地区，国际服就随意了，HK什么的都可以，然后这个地址你填的是什么，绑的时候就需要挂哪个地区的节点.<br><img src="https://figure.pages.dev/post/post4/post4_12.png" width="400"><br></p><h2 id="4-氪金操作"><a href="#4-氪金操作" class="headerlink" title="4.氪金操作"></a>4.氪金操作</h2><p>我们可以在兴业银行app内绑定我们的其他银行卡/支付宝/微信，向美国运通卡内进行转账操作，此处不做详细介绍。<br>转账后，我们便可以打开BA，在游戏内进行氪金了！当然也不止BA，理论上所有可以通过google play氪金的游戏，你都可以通过这种方法进行氪金了！<br>现在我们选择青辉石购入，就可以选择购买你想要的服务了：</p><p><img src="https://figure.pages.dev/post/post4/post4_13.png" width="400"><br><br>购买完成后，我们需要保持银行卡内储值足够进行支付。打开兴业银行app，你会发现，点击财富总览，我们的钱还没有被扣除；但是点击账户查询，在活期可用内，我们会发现，钱确实是被扣除了。这就是我们上文提到的，在支付后会冻结这笔钱，等到款项进入商家账户之后才会完成结算流程。<br>在等待一般一天后，我们再进入app查看，发现财富总览和户查询内都已被扣除了，此时点击交易明细，我们可以看到实际上的氪金金额了。<br><img src="https://figure.pages.dev/post/post4/post4_14.png" width="400"><br><br>可以发现，自己氪金所花费的人民币金额比代充要便宜很多。</p><hr><h1 id="五、其他想说的"><a href="#五、其他想说的" class="headerlink" title="五、其他想说的"></a>五、其他想说的</h1><p>没了（……）<br>这张卡是我去年下半年办理的，在入坑BA后，看到有很多的老师苦于不会氪金外服游戏，于是写下了这篇心得，希望可以切实帮到其他的老师们，有需要请教的也可以进行交流。</p>]]></content>
    
    
    <summary type="html">分享一种可以进行外服游戏充值的卡种——美国运通借记卡。</summary>
    
    
    
    <category term="网络技巧" scheme="http://www.blackpumpkin.site/categories/%E7%BD%91%E7%BB%9C%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="信用卡申请" scheme="http://www.blackpumpkin.site/tags/%E4%BF%A1%E7%94%A8%E5%8D%A1%E7%94%B3%E8%AF%B7/"/>
    
    <category term="游戏氪金" scheme="http://www.blackpumpkin.site/tags/%E6%B8%B8%E6%88%8F%E6%B0%AA%E9%87%91/"/>
    
  </entry>
  
  <entry>
    <title>【hexo】markdown书写规范速查</title>
    <link href="http://www.blackpumpkin.site/post/13950859.html"/>
    <id>http://www.blackpumpkin.site/post/13950859.html</id>
    <published>2023-01-02T15:08:36.000Z</published>
    <updated>2023-02-27T02:40:17.518Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>总结一些markdown的编写格式。<br>具体可参考：<a href="https://blog.csdn.net/u014061630/article/details/81359144">Markdown语法图文全面详解(10分钟学会)</a></p></div><h1 id="一、标题级别"><a href="#一、标题级别" class="headerlink" title="一、标题级别"></a>一、标题级别</h1><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 第一级标题</span><br><span class="line">## 第二级标题</span><br><span class="line">### 第三级标题</span><br><span class="line">#### 第四级标题</span><br><span class="line">##### 第五级标题</span><br><span class="line">###### 第六级标题</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><img src="https://figure.pages.dev/post/post2/post2_1.png" alt="post2_1"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h1 id="二、文字格式"><a href="#二、文字格式" class="headerlink" title="二、文字格式"></a>二、文字格式</h1><div class="note info flat"><p>实际上，如果比较熟悉HTML语言的话，这些差不多都是共通的，除了加粗、斜体等少量markdown表达方式可能有些不同。如加粗，除了 <code>**markdown**</code>方式以外，你依然可以使用 <code>&lt;b&gt;HTML&lt;/b&gt;</code>方式。<br>以下文字格式包括加粗、斜体、下划线、删除线、颜色、字号、文字背景色。</p></div><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**加粗文字**</span><br><span class="line">*斜体文字*</span><br><span class="line">&lt;u&gt;下划线&lt;/u&gt;</span><br><span class="line">~~删除线~~</span><br><span class="line">***加粗斜体文字***</span><br><span class="line">&lt;font size = 6&gt;6号字&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;楷体&quot;&gt;楷体&lt;/font&gt;</span><br><span class="line">&lt;font color=green&gt;绿色&lt;/font&gt;</span><br><span class="line">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=Orange&gt;橙色背景色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>加粗文字</strong></p><p><em>斜体文字</em></p><p><u>下划线</u></p><p><del>删除线</del></p><p><strong><em>加粗斜体文字</em></strong></p><p><font size = 6>6号字</font><br></p><p><font face="楷体">楷体</font><br></p><p><font color=green>绿色</font><br></p><table><tr><td bgcolor=Orange>橙色背景色</td></tr></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h1 id="三、代码"><a href="#三、代码" class="headerlink" title="三、代码"></a>三、代码</h1><h2 id="1-代码块"><a href="#1-代码块" class="headerlink" title="1.代码块"></a>1.代码块</h2><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`我是高亮代码块`</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><code>print（&#39;hello world&#39;）</code></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-代码区块"><a href="#2-代码区块" class="headerlink" title="2.代码区块"></a>2.代码区块</h2><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\```java</span><br><span class="line">public class Hello&#123;</span><br><span class="line">public static void main(String args[])&#123;</span><br><span class="line">System.out.println(&quot;Hello World&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">\```</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h1 id="四、列表"><a href="#四、列表" class="headerlink" title="四、列表"></a>四、列表</h1><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">有序号列表（注意后面有空格）：</span><br><span class="line">1. </span><br><span class="line">2. </span><br><span class="line">3. </span><br><span class="line"></span><br><span class="line">无序号列表：</span><br><span class="line">* 姓名</span><br><span class="line">* 年龄</span><br><span class="line"></span><br><span class="line">+ 入学日期</span><br><span class="line">+ 毕业日期</span><br><span class="line"></span><br><span class="line">- 兴趣</span><br><span class="line">- 爱好</span><br><span class="line"></span><br><span class="line">下面展示嵌套序号列表：</span><br><span class="line">- 技能</span><br><span class="line">  - Adobe</span><br><span class="line">    - PS</span><br><span class="line">    - PR</span><br><span class="line">    - AE</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p>有序号列表（注意后面有空格）：</p><ol><li></li><li></li><li></li></ol><p>无序号列表：</p><ul><li>姓名</li><li>年龄</li></ul><ul><li>入学日期</li><li>毕业日期</li></ul><ul><li>兴趣</li><li>爱好</li></ul><p>下面展示嵌套序号列表：</p><ul><li>技能<ul><li>Adobe<ul><li>PS</li><li>PR</li><li>AE</li></ul></li></ul></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h1 id="五、引用区块"><a href="#五、引用区块" class="headerlink" title="五、引用区块"></a>五、引用区块</h1><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;引用文字第一行&lt;br&gt;</span><br><span class="line">&gt;引用文字第二行</span><br><span class="line">&gt;&gt;引用文字第二层嵌套</span><br><span class="line">&gt;&gt;&gt;引用文字第三层嵌套</span><br><span class="line">&gt;</span><br><span class="line">&gt;引用文字第三行列表</span><br><span class="line">&gt; 1. 第一项</span><br><span class="line">&gt; 2. 第二项</span><br><span class="line">&gt; + 第一项</span><br><span class="line">&gt; + 第二项</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><blockquote><p>引用文字第一行<code>&lt;br&gt;</code><br>引用文字第二行</p><blockquote><p>引用文字第二层嵌套</p><blockquote><p>引用文字第三层嵌套</p></blockquote></blockquote><p>引用文字第三行列表</p><ol><li>第一项</li><li>第二项</li></ol><ul><li>第一项</li><li>第二项</li></ul></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h1 id="六、分隔线"><a href="#六、分隔线" class="headerlink" title="六、分隔线"></a>六、分隔线</h1><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"></span><br><span class="line">***</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><hr><hr><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h1 id="七、表格"><a href="#七、表格" class="headerlink" title="七、表格"></a>七、表格</h1><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">|序号|工程量|备注|</span><br><span class="line">|---|---|---|</span><br><span class="line">|1|50|无|</span><br><span class="line">|2|60|无|</span><br><span class="line">|3|70|有扣减|</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><div class="table-container"><table><thead><tr><th>序号</th><th>工程量</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>50</td><td>无</td></tr><tr><td>2</td><td>60</td><td>无</td></tr><tr><td>3</td><td>70</td><td>有扣减</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h1 id="八、链接和图片"><a href="#八、链接和图片" class="headerlink" title="八、链接和图片"></a>八、链接和图片</h1><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[百度一下](https://www.baidu.com)</span><br><span class="line"></span><br><span class="line">&lt;https://www.baidu.com&gt;</span><br><span class="line"></span><br><span class="line">![code](https://figure.pages.dev/img/post1.jpg)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><a href="https://www.baidu.com">百度一下</a></p><p><a href="https://www.baidu.com">https://www.baidu.com</a></p><p><img src="https://figure.pages.dev/img/post1.jpg" alt="code"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h1 id="九、公式"><a href="#九、公式" class="headerlink" title="九、公式"></a>九、公式</h1><div class="note info flat"><p>Markdown Preview Enhanced 使用 KaTeX 或者 MathJax 来渲染数学表达式。</p></div><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">行内公式：$$&#123;f(x)=ax^2+bx+c&#125;$$</span><br><span class="line"></span><br><span class="line">块内公式：</span><br><span class="line">$$</span><br><span class="line">&#123;Ax^2+By^2+Cx+Dy+E=0&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p>行内公式：</p><script type="math/tex; mode=display">{f(x)=ax^2+bx+c}</script><p>块内公式：</p><script type="math/tex; mode=display">{Ax^2+By^2+Cx+Dy+E=0}</script><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
    <summary type="html">一些markdawn的书写规范</summary>
    
    
    
    <category term="博客技巧" scheme="http://www.blackpumpkin.site/categories/%E5%8D%9A%E5%AE%A2%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="hexo" scheme="http://www.blackpumpkin.site/tags/hexo/"/>
    
    <category term="博客技巧" scheme="http://www.blackpumpkin.site/tags/%E5%8D%9A%E5%AE%A2%E6%8A%80%E5%B7%A7/"/>
    
    <category term="markdown" scheme="http://www.blackpumpkin.site/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>【hexo】分享一下用hexo+github创建博客的过程</title>
    <link href="http://www.blackpumpkin.site/post/86516c22.html"/>
    <id>http://www.blackpumpkin.site/post/86516c22.html</id>
    <published>2022-12-22T06:59:34.000Z</published>
    <updated>2024-02-01T11:09:02.123Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>由于本人对代码一窍不通，在创建博客的过程中，基本就是靠各位大佬们的教程和百度照葫芦画瓢，因此还是在这里做一个总结，防止后来继续踩相同的坑，同时也想告诉各位，创建博客，不需要任何的计算机知识，和我一样的小白是完全可以创建出自己的博客的。</p></div><div class="note default flat"><p>在此感谢<a href="https://www.fomal.cc/posts/e593433d.html#1-%E5%89%8D%E8%A8%80">Fomalhaut大佬的教程</a>，讲的非常详细！</p></div><h1 id="一、前置条件"><a href="#一、前置条件" class="headerlink" title="一、前置条件"></a>一、前置条件</h1><h2 id="1-node-js"><a href="#1-node-js" class="headerlink" title="1.node.js"></a>1.node.js</h2><p>官方网站下载即可：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a><br>检测是否安装成功：在cmd中执行 <code>node -v</code> 和 <code>npm -v</code> ，出现版本号即说明安装成功。</p><h2 id="2-Git"><a href="#2-Git" class="headerlink" title="2.Git"></a>2.Git</h2><p>官方网站下载即可：<a href="https://git-scm.com/">https://git-scm.com/</a><br>由于官网下载太慢，可以通过淘宝的开源镜像下载：<a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/">https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/</a><br>检测是否安装成功：在cmd中执行 <code>git --version</code> ，出现版本号即说明安装成功。</p><h2 id="3-Github"><a href="#3-Github" class="headerlink" title="3.Github"></a>3.Github</h2><p>官方网站注册即可：<a href="https://github.com/">https://github.com/</a><br>在账号创建成功后，新建仓库，仓库名称填写为 <code>&#123;username&#125;.github.io</code>，其中{username}为自己GitHub账号的用户名，仓库类型选择公共（免费），勾选添加README<br>以后博客的相关文件都会上传至这个仓库内，这也可以检测你的博客是否更新成功。<br>其实不使用GitHub也是可以的，不过作为一个小白，先把github设置搞明白即可，以后可以进行更换。</p><hr><h1 id="二、安装hexo"><a href="#二、安装hexo" class="headerlink" title="二、安装hexo"></a>二、安装hexo</h1><h2 id="1-添加国内淘宝镜像（加快下载速度）"><a href="#1-添加国内淘宝镜像（加快下载速度）" class="headerlink" title="1.添加国内淘宝镜像（加快下载速度）"></a>1.添加国内淘宝镜像（加快下载速度）</h2><p>在cmd中执行：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h2 id="2-git-base-控制台"><a href="#2-git-base-控制台" class="headerlink" title="2.git base 控制台"></a>2.git base 控制台</h2><p>在一个合适的文件夹内右键，点击 <code>Git Bash Here</code>，即可出现git的控制台，<strong>要注意下面的操作全部在控制台内操作，而不是cmd了。</strong></p><h2 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3.安装hexo"></a>3.安装hexo</h2><p><code>npm i hexo-cli -g</code><br>检测是否安装成功：<code>hexo -v</code>，出现版本号即说明安装成功。</p><hr><h1 id="三、连接GitHub和hexo"><a href="#三、连接GitHub和hexo" class="headerlink" title="三、连接GitHub和hexo"></a>三、连接GitHub和hexo</h1><h2 id="1-输入GitHub用户名"><a href="#1-输入GitHub用户名" class="headerlink" title="1.输入GitHub用户名"></a>1.输入GitHub用户名</h2><p><code>git config --global user.name &#123;username&#125;</code><br>其中{username}为自己GitHub账号的用户名。<br>一个小坑：<strong>GitHub的用户名和昵称一定要区分开！</strong></p><h2 id="2-输入GitHub注册邮箱"><a href="#2-输入GitHub注册邮箱" class="headerlink" title="2.输入GitHub注册邮箱"></a>2.输入GitHub注册邮箱</h2><p><code>git config --global user.email &#123;useremail&#125;</code><br>其中{useremail}为自己GitHub账号的注册邮箱。</p><h2 id="3-生成密钥"><a href="#3-生成密钥" class="headerlink" title="3.生成密钥"></a>3.生成密钥</h2><p>SSH key：<code>ssh-keygen -t rsa -C &#123;useremail&#125;</code><br>其中{useremail}为自己GitHub账号的注册邮箱。</p><h2 id="4-查看SSH-key"><a href="#4-查看SSH-key" class="headerlink" title="4.查看SSH key"></a>4.查看SSH key</h2><p>进入路径<strong>C:\Users\Astar.ssh\id_rsa.pub</strong>，右键记事本打开该pub文件，可以看到以<strong>ssh-rsa</strong>为首的一大段内容，复制下来。<br>以上也可在Git Bash控制台内输入 <code>cat ~/.ssh/id_rsa.pub</code>，也可以看到相同的内容。</p><h2 id="5-在Github内创建密钥"><a href="#5-在Github内创建密钥" class="headerlink" title="5.在Github内创建密钥"></a>5.在Github内创建密钥</h2><p>打开GitHub，进入<strong>设置——SSH and GPG keys</strong>，新建一个SSH，名称随意，下一栏中的内容粘贴为上一步中输出的内容。</p><h2 id="6-检测是否连接成功"><a href="#6-检测是否连接成功" class="headerlink" title="6.检测是否连接成功"></a>6.检测是否连接成功</h2><p><code>ssh -T git@github.com</code></p><p>如果出现以下内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Are you sure you want to <span class="built_in">continue</span> connecting(<span class="built_in">yes</span>/no)?</span><br></pre></td></tr></table></figure><p>输入 <code>yes</code>即可，随后出现自己的用户名即说明连接成功。</p><h2 id="7-无法连接至Github的解决方案"><a href="#7-无法连接至Github的解决方案" class="headerlink" title="7.无法连接至Github的解决方案"></a>7.无法连接至Github的解决方案</h2><div class="note default flat"><p><a href="https://blog.csdn.net/weixin_41287260/article/details/124368189">Git问题：解决“ssh:connect to host github.com port 22: Connection timed out”</a></p></div><p>在上一步中，如果出现以下内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh: connect to host github.com port 22: Connection timed out</span><br></pre></td></tr></table></figure><p>说明我们无法与Github建立连接，于是我们可以通过更换端口的方式解决。<br>在连接Github之前，进入路径<strong>C:\Users\Astar.ssh\id_rsa.pub</strong>，新建config文本文档，输入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">User &#123;usermail&#125;</span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line">Port 443</span><br></pre></td></tr></table></figure><p>其中{useremail}为自己GitHub账号的注册邮箱。</p><h2 id="8-修改本地-config-yml文件"><a href="#8-修改本地-config-yml文件" class="headerlink" title="8.修改本地_config.yml文件"></a>8.修改本地_config.yml文件</h2><p>使用记事本打开该文件，在<code>deploy</code>行修改以下内容：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:&#123;useremail&#125;/&#123;useremail&#125;.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>以下为旧版写法，现已不再使用：<br><details class="folding-tag" red><summary> 旧版写法，已废弃 </summary>              <div class='content'>              <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com/&#123;useremail&#125;/&#123;useremail&#125;.github.io</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>              </div>            </details><br>上面可以说是踩过的最大的一个坑了。<font color=red>首先，冒号后面必须有一个空格；其次，repo写法的不同是因为旧版本hexo2.x版本的写法在3.x中已经不适用了；最后，可能有的人新建的分支默认为<strong>master</strong>（即branch后面为master而非main），以前GitHub创建仓库时都是默认的master，但是因为master有着“主宰、暴君”的含义，所以GitHub就将默认改成了<strong>main</strong>。</font></p><hr><h1 id="四、创建博客文件"><a href="#四、创建博客文件" class="headerlink" title="四、创建博客文件"></a>四、创建博客文件</h1><h2 id="1-初始化文件夹"><a href="#1-初始化文件夹" class="headerlink" title="1.初始化文件夹"></a>1.初始化文件夹</h2><p><code>hexo init</code></p><h2 id="2-安装组件"><a href="#2-安装组件" class="headerlink" title="2.安装组件"></a>2.安装组件</h2><p><code>npm install</code></p><h2 id="3-清除本地静态页面"><a href="#3-清除本地静态页面" class="headerlink" title="3.清除本地静态页面"></a>3.清除本地静态页面</h2><p><code>hexo clean</code></p><h2 id="4-生成本地静态页面"><a href="#4-生成本地静态页面" class="headerlink" title="4.生成本地静态页面"></a>4.生成本地静态页面</h2><p><code>hexo generate</code>或 <code>hexo g</code></p><h2 id="5-本地预览页面"><a href="#5-本地预览页面" class="headerlink" title="5.本地预览页面"></a>5.本地预览页面</h2><p><code>hexo server</code>或 <code>hexo s</code>，随后在浏览器打开本地静态页面：<a href="http://localhost:4000/">http://localhost:4000/</a><br>按下 <code>ctrl+C</code>可结束本地预览。</p><h2 id="6-上传本地静态页面"><a href="#6-上传本地静态页面" class="headerlink" title="6.上传本地静态页面"></a>6.上传本地静态页面</h2><p><code>hexo deploy</code>或 <code>hexo d</code></p><p>打开自己的博客地址 <code>&#123;username&#125;.github.io</code>，大功告成！</p><h1 id="2024-2-1更新-使用hexo-git-backup备份博客文件"><a href="#2024-2-1更新-使用hexo-git-backup备份博客文件" class="headerlink" title="2024/2/1更新 使用hexo-git-backup备份博客文件"></a>2024/2/1更新 使用hexo-git-backup备份博客文件</h1><h2 id="1-安装插件"><a href="#1-安装插件" class="headerlink" title="1.安装插件"></a>1.安装插件</h2><p><code>$ npm install hexo-git-backup --save</code></p><h2 id="2-插件配置"><a href="#2-插件配置" class="headerlink" title="2.插件配置"></a>2.插件配置</h2><p>在博客根目录下的<strong>_config.yml</strong>文件中添加以下内容：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">backup:</span><br><span class="line">    type: git</span><br><span class="line">    theme: butterfly</span><br><span class="line">    message: Back up my www.blackpumpkin.site blog</span><br><span class="line">    repository:</span><br><span class="line">      # github: git@github.com:xxx/xxx.git,branchName</span><br></pre></td></tr></table></figure><br>参数解释：<br>theme：需要备份的主题名称<br>message：自定义提交信息<br>repository：仓库名，注意仓库地址后面要添加一个分支名，格式为<strong>托管平台: 仓库地址,分支名</strong></p><h2 id="3-提交、备份"><a href="#3-提交、备份" class="headerlink" title="3.提交、备份"></a>3.提交、备份</h2><p><code>hexo backup</code></p><p>一键四连：</p><p><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; hexo b</code></p><h2 id="4-如何恢复博客"><a href="#4-如何恢复博客" class="headerlink" title="4.如何恢复博客"></a>4.如何恢复博客</h2><p>下载或者 clone 前文所述备份的博客到本地任意位置，复制备份文件夹内所有文件到新安装的博客目录下，重复文件保留备份的即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;由于本人对代码一窍不通，在创建博客的过程中，基本就是靠各位大佬们的教程和百度照葫芦画瓢，因此还是在这里做一个总结，防止后来继续踩相同的坑，同时也想告诉各位，创建博客，不需要任何的计算机知识，和我一样的小白是完全可以创建</summary>
      
    
    
    
    <category term="博客技巧" scheme="http://www.blackpumpkin.site/categories/%E5%8D%9A%E5%AE%A2%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="hexo" scheme="http://www.blackpumpkin.site/tags/hexo/"/>
    
    <category term="博客技巧" scheme="http://www.blackpumpkin.site/tags/%E5%8D%9A%E5%AE%A2%E6%8A%80%E5%B7%A7/"/>
    
    <category term="github" scheme="http://www.blackpumpkin.site/tags/github/"/>
    
  </entry>
  
</feed>
