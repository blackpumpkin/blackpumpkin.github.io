<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【New Bing】New Bing的申请流程分享</title>
      <link href="/post/d34481fd.html"/>
      <url>/post/d34481fd.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>分享一下New Bing的申请流程。</p></div><h1 id="一、环境设置"><a href="#一、环境设置" class="headerlink" title="一、环境设置"></a>一、环境设置</h1><h2 id="1-节点设置"><a href="#1-节点设置" class="headerlink" title="1.节点设置"></a>1.节点设置</h2><p>同chatgpt，我们必须全程将网络环境切换成美国或加拿大的ip，否则就会出现【出错了。请重试。】字样。<br><img src="https://figure.pages.dev/post/post10/微信截图_20230220135311.png" width="400"></p><h2 id="2-Microsoft-Edge"><a href="#2-Microsoft-Edge" class="headerlink" title="2.Microsoft Edge"></a>2.Microsoft Edge</h2><p>我们需要使用Edge浏览器进入New Bing。</p><h2 id="3-ModHeader"><a href="#3-ModHeader" class="headerlink" title="3.ModHeader"></a>3.ModHeader</h2><p>在Edge点击【扩展】，搜索ModHeader插件并安装。<br>在ModHeader里，参数名称设置为<code>X-Forwarded-For</code>，参数值设置为<code>4.2.2.2</code>（微软）或<code>8.8.8.8</code>（谷歌）。</p><hr><h1 id="二、官网申请"><a href="#二、官网申请" class="headerlink" title="二、官网申请"></a>二、官网申请</h1><p>打开<a href="https://www.bing.com/new">https://www.bing.com/new</a>，点击【加入候补名单】即可。<br><img src="https://figure.pages.dev/post/post10/微信截图_20230220135545.png" width="400"></p><hr><h1 id="三、仍然报错"><a href="#三、仍然报错" class="headerlink" title="三、仍然报错"></a>三、仍然报错</h1><p>请确保自己的节点为美国或加拿大且足够稳定。如果仍然出现【出错了。请重试。】字样，则进行以下操作：</p><h2 id="1-退出Microsoft-Rewards"><a href="#1-退出Microsoft-Rewards" class="headerlink" title="1.退出Microsoft Rewards"></a>1.退出Microsoft Rewards</h2><div class="note warning flat"><p><strong>注意</strong>：如果你的reward还有用，请先将reward兑换成所需产品后后再进行操作，<strong>此操作会导致reward清零</strong>。</p></div><p>打开<a href="https://rewards.bing.com/optout?confirm=false">https://rewards.bing.com/optout?confirm=false</a>，点击【立即选择退出并失去我的积分】。<br><img src="https://figure.pages.dev/post/post10/微信截图_20230220135417.png" width="400"></p><h2 id="2-重新加入Microsoft-Rewards"><a href="#2-重新加入Microsoft-Rewards" class="headerlink" title="2.重新加入Microsoft Rewards"></a>2.重新加入Microsoft Rewards</h2><p>打开<a href="https://www.bing.com/new">https://www.bing.com/new</a>，在右上角点击奖杯，点击【选择加入Rewards】。<br><img src="https://figure.pages.dev/post/post10/微信截图_20230220135458.png" width="400"><br>重新加入reward后，退出浏览器并打开新bing申请页面。此时如果已经登录微软账号，右上角的reward会显示为0，再次申请后即可成功。</p>]]></content>
      
      
      <categories>
          
          <category> 网络技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> new_bing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【python】分解质因数+可视化程序</title>
      <link href="/post/39734791.html"/>
      <url>/post/39734791.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>使用python设计一个分解质因数的可视化程序，输入任意一个数，程序进行分解质因数。要求如下：</p><ul><li>设置输入框，要求在输出结果后输入框内的数字清空；</li><li>设置输出框，显示出所有成功分解的数和分解公式，要求新的结果出现在旧的结果的上面；</li><li>设置复制按钮，复制输出结果框内的所有结果；</li><li>设置清空按钮，清空输出结果框内的结果；</li><li>在分解质因数前判断输入的内容，如果输入的内容不是数则报错，如果输入的内容不是大于等于2的正整数则报错；</li></ul></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> messagebox</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">factorize</span>():</span><br><span class="line">    <span class="comment"># 获取输入框内的内容</span></span><br><span class="line">    n_str = input_entry.get()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 判断输入的内容是否为正整数</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        n = <span class="built_in">int</span>(n_str)</span><br><span class="line">        <span class="keyword">if</span> n &lt; <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&quot;输入必须大于等于2的正整数！&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        messagebox.showerror(<span class="string">&quot;错误&quot;</span>, <span class="string">&quot;请输入大于等于2的正整数！&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 分解质因数</span></span><br><span class="line">    factors = []</span><br><span class="line">    d = <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> d * d &lt;= n:</span><br><span class="line">        <span class="keyword">while</span> n % d == <span class="number">0</span>:</span><br><span class="line">            factors.append(d)</span><br><span class="line">            n //= d</span><br><span class="line">        d += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> n &gt; <span class="number">1</span>:</span><br><span class="line">        factors.append(n)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 构造分解公式</span></span><br><span class="line">    formula = <span class="string">f&quot;<span class="subst">&#123;n_str&#125;</span> = &quot;</span></span><br><span class="line">    <span class="keyword">for</span> i, factor <span class="keyword">in</span> <span class="built_in">enumerate</span>(factors):</span><br><span class="line">        <span class="keyword">if</span> i &gt; <span class="number">0</span>:</span><br><span class="line">            formula += <span class="string">&quot; × &quot;</span></span><br><span class="line">        formula += <span class="built_in">str</span>(factor)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 在输出框中显示分解结果</span></span><br><span class="line">    output_text.insert(<span class="string">&quot;1.0&quot;</span>, formula + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 清空输入框</span></span><br><span class="line">    input_entry.delete(<span class="number">0</span>, tk.END)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">copy_result</span>():</span><br><span class="line">    <span class="comment"># 将输出框中的内容复制到剪贴板</span></span><br><span class="line">    root.clipboard_clear()</span><br><span class="line">    root.clipboard_append(output_text.get(<span class="string">&quot;1.0&quot;</span>, tk.END))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">clear_result</span>():</span><br><span class="line">    <span class="comment"># 清空输出框中的内容</span></span><br><span class="line">    output_text.delete(<span class="string">&quot;1.0&quot;</span>, tk.END)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建窗口</span></span><br><span class="line">root = tk.Tk()</span><br><span class="line">root.title(<span class="string">&quot;分解质因数&quot;</span>)</span><br><span class="line">root.geometry(<span class="string">&quot;640x480&quot;</span>)</span><br><span class="line">root.resizable(<span class="literal">False</span>, <span class="literal">False</span>)</span><br><span class="line">root.attributes(<span class="string">&quot;-alpha&quot;</span>, <span class="number">0.9</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在屏幕中央显示窗口</span></span><br><span class="line">screen_width = root.winfo_screenwidth()</span><br><span class="line">screen_height = root.winfo_screenheight()</span><br><span class="line">x = (screen_width - <span class="number">640</span>) // <span class="number">2</span></span><br><span class="line">y = (screen_height - <span class="number">480</span>) // <span class="number">2</span></span><br><span class="line">root.geometry(<span class="string">f&quot;640x480+<span class="subst">&#123;x&#125;</span>+<span class="subst">&#123;y&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置全局字体</span></span><br><span class="line">font = (<span class="string">&quot;楷体&quot;</span>, <span class="number">14</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建输入框</span></span><br><span class="line">input_label = tk.Label(root, text=<span class="string">&quot;请输入一个大于等于2的正整数：&quot;</span>, font=font)</span><br><span class="line">input_label.grid(row=<span class="number">0</span>, column=<span class="number">0</span>, padx=<span class="number">5</span>, pady=<span class="number">5</span>)</span><br><span class="line">input_entry = tk.Entry(root, font=font)</span><br><span class="line">input_entry.grid(row=<span class="number">0</span>, column=<span class="number">1</span>, padx=<span class="number">5</span>, pady=<span class="number">5</span>)</span><br><span class="line">input_entry.focus()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建分解按钮</span></span><br><span class="line">factorize_button = tk.Button(root, text=<span class="string">&quot;分解&quot;</span>, command=factorize, font=font)</span><br><span class="line">factorize_button.grid(row=<span class="number">0</span>, column=<span class="number">2</span>, padx=<span class="number">5</span>, pady=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建输出框</span></span><br><span class="line">output_label = tk.Label(root, text=<span class="string">&quot;分解结果：&quot;</span>, font=font)</span><br><span class="line">output_label.grid(row=<span class="number">1</span>, column=<span class="number">0</span>, padx=<span class="number">5</span>, pady=<span class="number">5</span>)</span><br><span class="line">output_text = tk.Text(root, height=<span class="number">10</span>, width=<span class="number">30</span>, font=font)</span><br><span class="line">output_text.grid(row=<span class="number">2</span>, columnspan=<span class="number">3</span>, padx=<span class="number">5</span>, pady=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建复制按钮</span></span><br><span class="line">copy_button = tk.Button(root, text=<span class="string">&quot;复制&quot;</span>, command=copy_result, font=font)</span><br><span class="line">copy_button.grid(row=<span class="number">3</span>, column=<span class="number">0</span>, padx=<span class="number">5</span>, pady=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建清空按钮</span></span><br><span class="line">clear_button = tk.Button(root, text=<span class="string">&quot;清空&quot;</span>, command=clear_result, font=font)</span><br><span class="line">clear_button.grid(row=<span class="number">3</span>, column=<span class="number">1</span>, padx=<span class="number">5</span>, pady=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 居中显示所有控件</span></span><br><span class="line"><span class="keyword">for</span> child <span class="keyword">in</span> root.winfo_children():</span><br><span class="line">    child.grid_configure(padx=<span class="number">10</span>, pady=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行窗口</span></span><br><span class="line">root.mainloop()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pythonGUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【ChatGPT】ChatGPT的注册流程分享</title>
      <link href="/post/8ee3673d.html"/>
      <url>/post/8ee3673d.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>最近ChatGPT又火起来了，各家网络巨头纷纷炒作人工智能大行其道，不过博主记得ChatGPT在去年11月份其实就已经开始应用了。这里博主就来分享一下ChatGPT的注册流程。</p></div><h1 id="零、环境设置"><a href="#零、环境设置" class="headerlink" title="零、环境设置"></a>零、环境设置</h1><h2 id="1-节点"><a href="#1-节点" class="headerlink" title="1.节点"></a>1.节点</h2><p>我们必须全程将网络环境切换成美国或加拿大的ip，<font color=red>香港、日本等节点均无法完成</font>，否则我们会看到以下内容，说明拒绝登录：<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210145253.png" width="400"></p><h2 id="2-本地时间"><a href="#2-本地时间" class="headerlink" title="2.本地时间"></a>2.本地时间</h2><p>以windows11为例，电脑打开【设置】——【时间和语言】——【日期和时间】，将【时区】改为【(UTC-05:00)东部时间(美国和加拿大)】。<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210153744.png" width="400"></p><hr><h1 id="一、邮箱注册OpenAI"><a href="#一、邮箱注册OpenAI" class="headerlink" title="一、邮箱注册OpenAI"></a>一、邮箱注册OpenAI</h1><p>我们打开OpenAI的官网<a href="https://openai.com/">https://openai.com/</a>，左下角点击【ChatGPT】，点击【TRY CHATGPT】，弹出以下界面：<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210145113.png" width="400"><br>点击【Sign up】，输入我们的邮箱，点击【Continue】。<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210145630.png" width="400"><br>显示以下内容表示官网向我们的邮箱发送成功，我们进入邮箱找到激活邮件。<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210150237.png" width="400"><br>此时我们返回<a href="https://chat.openai.com/">https://chat.openai.com/</a>，点击【Sign up】，重复输入邮箱注册，出现以下提示表示我们已注册成功：<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210151741.png" width="400"><br>返回<a href="https://chat.openai.com/">https://chat.openai.com/</a>，这次我们点击【Log in】，输入邮箱进入，会出现以下内容：<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210155533.png" width="400"><br>输入姓名，点击【Continue】。<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210160000.png" width="400"><br>我们需要手机号接受验证码，但是目前ChatGPT不支持中国大陆手机号，于是我们需要接码平台。</p><hr><h1 id="二、接收手机验证码"><a href="#二、接收手机验证码" class="headerlink" title="二、接收手机验证码"></a>二、接收手机验证码</h1><p>我们以SMS-Activate为例。<br>进入<a href="https://sms-activate.org/">https://sms-activate.org/</a>，注册账号后点击右上角【余额】——【充值】——【支付宝】，充值1美元即可。<br>返回主页，在左下角选择【OpenAI】，在【按国家分类】处选择摩尔多瓦等国即可开始接收验证码。<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210160747.png" width="400"><br><img src="https://figure.pages.dev/post/post8/QQ截图20230210160757.png" width="400"><br>此时会显示手机号，我们填入到之前的页面中，点击【Send code】，在接码平台即可接收到验证码。<br>填写验证码后继续，我们便完成了注册流程，此时我们可以把电脑的时区改回东八区了。<br><img src="https://figure.pages.dev/post/post8/QQ截图20230210161429.png" width="400"></p>]]></content>
      
      
      <categories>
          
          <category> 网络技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chatgpt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【hexo】图床的使用</title>
      <link href="/post/d6899135.html"/>
      <url>/post/d6899135.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>使用图床可以给服务器减轻压力，对于网站的访问也会提高一定的速度。</p></div><h1 id="一、基于Github仓库的图床"><a href="#一、基于Github仓库的图床" class="headerlink" title="一、基于Github仓库的图床"></a>一、基于Github仓库的图床</h1><div class="note info flat"><p>Github仓库的好处是，不光是图片，音频、视频等文件也可以进行上传。</p></div><h2 id="1-新建仓库"><a href="#1-新建仓库" class="headerlink" title="1.新建仓库"></a>1.新建仓库</h2><p>点击<code>New Repository</code>，创建一个新的仓库，仓库名字随意。点击<code>Create Repository</code>完成创建。</p><h2 id="2-克隆仓库"><a href="#2-克隆仓库" class="headerlink" title="2.克隆仓库"></a>2.克隆仓库</h2><p>在仓库页面内点击绿色按钮【&lt;&gt;code】——【Local】——【SSH】，其中的SSH链接如下：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:XXX/YYY.git</span><br></pre></td></tr></table></figure><br>XXX为Github名称，YYY为仓库名称。这便是我们需要的仓库信息，复制下来。<br>在本地建立一个空文件夹，右键打开<code>Git Bash</code>，直接粘贴上述链接，回车执行。</p><h2 id="3-上传图片"><a href="#3-上传图片" class="headerlink" title="3.上传图片"></a>3.上传图片</h2><p>在我们把图片复制到仓库文件夹后，我们执行以下命令：</p><h3 id="3-0-对远程仓库进行修改"><a href="#3-0-对远程仓库进行修改" class="headerlink" title="3.0 对远程仓库进行修改"></a>3.0 对远程仓库进行修改</h3><p>如果我们在别的平台对仓库进行过修改（如使用过PicGo等图床上传软件导致远程仓库与本地仓库不同步），我们需要在执行前先将远程仓库与本地仓库同步：<br><code>git pull</code></p><h3 id="3-1-将文件加入到暂存区"><a href="#3-1-将文件加入到暂存区" class="headerlink" title="3.1 将文件加入到暂存区"></a>3.1 将文件加入到暂存区</h3><p><code>git add .</code><br>（注意有一个小点）</p><h3 id="3-2将暂存区文件加入到本地仓库"><a href="#3-2将暂存区文件加入到本地仓库" class="headerlink" title="3.2将暂存区文件加入到本地仓库"></a>3.2将暂存区文件加入到本地仓库</h3><p><code>git commit -m &quot;message&quot;</code><br>message为需要注释的内容，可以改为任意内容，但最好是可以描述文件本身作用的信息。</p><h3 id="3-3将本地仓库上传到远程仓库"><a href="#3-3将本地仓库上传到远程仓库" class="headerlink" title="3.3将本地仓库上传到远程仓库"></a>3.3将本地仓库上传到远程仓库</h3><p><code>git push</code></p><h2 id="4-查看仓库内图片"><a href="#4-查看仓库内图片" class="headerlink" title="4.查看仓库内图片"></a>4.查看仓库内图片</h2><p>打开在仓库内的图片，可以发现地址为<code>https://github.com/&#123;用户名&#125;/&#123;图床仓库名&#125;/blob/main/&#123;图片文件夹&#125;/&#123;图片名称&#125;</code><br>{用户名}、{图床仓库名}、{图片文件夹}、{图片名称}等均改为我们自己的名称。<br>我们将其中的blob改为raw，即为我们需要图片的地址。<br>也可以选择github用来存储用户上传文件的服务地址：<br><code>https://raw.githubusercontent.com/&#123;用户名&#125;/&#123;图床仓库名&#125;/main/&#123;图片文件夹&#125;/&#123;图片名称&#125;</code></p><h2 id="5-CDN部署加速"><a href="#5-CDN部署加速" class="headerlink" title="5.CDN部署加速"></a>5.CDN部署加速</h2><h3 id="5-1-Cloudflare"><a href="#5-1-Cloudflare" class="headerlink" title="5.1 Cloudflare"></a>5.1 Cloudflare</h3><p>打开【Pages】——【创建项目】——【连接到Git】，选择我们的图库，创建项目后会给出一个域，形如<code>aaa-bbb-ccc.pages.dev</code><br>我们在上述域后面添加内容 /{图片文件夹}/{图片名称}，用浏览器进入，即为我们需要图片的地址。</p><h3 id="5-2-jsdelivr"><a href="#5-2-jsdelivr" class="headerlink" title="5.2 jsdelivr"></a>5.2 jsdelivr</h3><div class="note warning flat"><p>经验证，jsd目前已被墙，5.2方法已失效。</p></div><p>将仓库内图片的地址改为<code>https://cdn.jsdelivr.net/gh/&#123;github用户名&#125;/&#123;图床仓库名&#125;@&#123;仓库分支&#125;/&#123;图片文件夹&#125;/&#123;图片名称&#125;</code><br>其中仓库分支一般为main</p><h3 id="5-3-Staticaly"><a href="#5-3-Staticaly" class="headerlink" title="5.3 Staticaly"></a>5.3 Staticaly</h3><p>将仓库内图片的地址改为<code>https://cdn.staticaly.com/gh/&#123;github用户名&#125;/&#123;图床仓库名&#125;@&#123;仓库分支&#125;/&#123;图片文件夹&#125;/&#123;图片名称&#125;</code></p><h3 id="5-4-Vercel、Netlify等托管平台"><a href="#5-4-Vercel、Netlify等托管平台" class="headerlink" title="5.4 Vercel、Netlify等托管平台"></a>5.4 Vercel、Netlify等托管平台</h3><p>我们需要完成自定义二级域名并进行解析（参考绑定自定义域名内容）。<br>将仓库内图片的地址改为<code>&#123;自定义域名&#125;/&#123;图片文件夹&#125;/&#123;图片名称&#125;</code></p><hr><h1 id="二、第三方图床"><a href="#二、第三方图床" class="headerlink" title="二、第三方图床"></a>二、第三方图床</h1><p>这部分图床（如SMMS）的搭建门槛较低，所以速度和稳定性良莠不齐，可以多搜索一些使用。</p><hr><h1 id="三、论坛图床"><a href="#三、论坛图床" class="headerlink" title="三、论坛图床"></a>三、论坛图床</h1><p>博主在以前玩舰c的时候混过一段时间NGA舰版，版内有一个“<a href="https://bbs.nga.cn/read.php?tid=7622707">图床专用集中贴</a>”，可以在贴内上传图片，然后复制图片的链接即可作为外链使用，即使帖子被冲水也不会影响。实际上，任何的论坛，都是可以当作图床的，只是非常的不稳定。</p><hr><h1 id="拓展阅读：使用vscode直接上传到远程仓库"><a href="#拓展阅读：使用vscode直接上传到远程仓库" class="headerlink" title="拓展阅读：使用vscode直接上传到远程仓库"></a>拓展阅读：使用vscode直接上传到远程仓库</h1><div class="note info flat"><p>在git bash中逐一输入<code>git add .</code>等命令实在是过于繁琐，因此我们可以使用vscode一键上传到远程仓库。</p></div><h2 id="1-链接github"><a href="#1-链接github" class="headerlink" title="1.链接github"></a>1.链接github</h2><p>此步骤在我们创建hexo时就已经进行完毕（git config、设置ssh等），因此可直接跳过。</p><h2 id="2-克隆仓库-1"><a href="#2-克隆仓库-1" class="headerlink" title="2.克隆仓库"></a>2.克隆仓库</h2><p>参考本文第一章第二节。</p><h2 id="3-vscode设置"><a href="#3-vscode设置" class="headerlink" title="3.vscode设置"></a>3.vscode设置</h2><p>打开vscode，【文件】——【打开文件夹】，选择我们克隆到本地的仓库文件夹。<br>细心的你会发现，仓库内有一个【.git】文件夹，这便是我们远程仓库的信息，我们称做Git仓库(Git Repository)。<br>我们将需要上传的图片直接放入仓库文件夹内，随后我们会看到，vscode左侧的源代码管理会发生变化。<br>打开【源代码管理】，直接提交即可。<br>*如果一直在转圈，说明设置的默认选项影响了commit，当我们在commit却不添加任何消息时，会默认生成一个文件来替代消息并提交，而服务器无法接受这样的消息。<br>在设置内找到【Git: Use Editor As Commit Input】，取消勾选即可。<br><div class="note default flat"><p><a href="https://blog.csdn.net/Er_Studying_Bai/article/details/128088429">git bash可以正常commit，但是 VSCode 里不能正常commit使用的解决方法</a></p></div></p>]]></content>
      
      
      <categories>
          
          <category> 博客技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客技巧 </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【hexo】hexo提交到搜索引擎收录</title>
      <link href="/post/eb7308cc.html"/>
      <url>/post/eb7308cc.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、生成站点地图"><a href="#一、生成站点地图" class="headerlink" title="一、生成站点地图"></a>一、生成站点地图</h1><p>在终端输入以下内容并回车：<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><br>在_config.yml文件添加以下内容：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 自动生成sitemap</span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br></pre></td></tr></table></figure><br>然后在git工具中三连：<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</code><br>此时，进入<strong>public</strong>目录，发现里面有<strong>sitemap.xml</strong>和<strong>baidusitemap.xml</strong>文件，这就是生成的站点地图。里面包含了网站上所有页面的链接，搜索引擎通过这个文件来抓取网站页面。</p><hr><h1 id="二、搜索引擎收录"><a href="#二、搜索引擎收录" class="headerlink" title="二、搜索引擎收录"></a>二、搜索引擎收录</h1><h2 id="1-百度"><a href="#1-百度" class="headerlink" title="1.百度"></a>1.百度</h2><p>访问<a href="https://ziyuan.baidu.com/">百度搜索资源平台官网</a>，选择【用户中心】——【站点管理】，点击【添加网址】，我们依次进行【输入网站】——【站点属性】——【验证网站】，其中第三步验证网站需要我们进行验证。<br><div class="note warning flat"><p>【公告】站点验证暂停CNAME验证的通知<br>亲爱的搜索开发者<br>近期百度搜索资源平台策略调整，站点管理-验证网站暂停【CNAME验证】的方式。该调整对已完成验证的站点没有影响，若站点未验证或验证过期，可以选择使用【文件验证】、【HTML标签验证】方式进行站点验证。<br>给您带来的不便敬请谅解！<br>发布日期：2023-01-13<br>来自<a href="https://ziyuan.baidu.com/wiki/3462">https://ziyuan.baidu.com/wiki/3462</a></p></div><br>我们选择【HTML标签验证】，发现我们需要添加代码进行验证：<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML标签验证</span></span><br><span class="line"><span class="comment">将以下代码添加到您的网站首页HTML代码的&lt;head&gt;标签与&lt;/head&gt;标签之间，完成操作后请点击“验证”按钮。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;baidu-site-verification&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&#123;your content&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 查看示例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;baidu-site-verification&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&#123;your content&#125;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>My title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    page contents</span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 为保持验证通过的状态,成功验证后请不要删除该标签 --&gt;</span></span><br></pre></td></tr></table></figure><br>其中{your content}为百度提示我们插入的content值。<br>由于我使用的butterfly主题文件自带了站长验证功能，因此打开<strong>_config.butterfly.yml</strong>，找到<code>site_verification</code>行进行修改即可（{your content}需要进行替换）：<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Verification (站長驗證)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="attr">site_verification:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">baidu-site-verification</span></span><br><span class="line">    <span class="attr">content:</span> &#123;<span class="string">your</span> <span class="string">content</span>&#125;</span><br></pre></td></tr></table></figure><br>点击【完成验证】即可验证成功。<br>重新进入站点管理（站点属性设置），点击【普通收录】——【sitemap】，在【请填写数据文件地址】输入以下内容：<br><figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">www.blackpumpkin.xyz/sitemap.xml</span><br><span class="line">www.blackpumpkin.xyz/baidusitemap.xml</span><br></pre></td></tr></table></figure><br>点击【提交】即可完成。</p><h2 id="2-谷歌"><a href="#2-谷歌" class="headerlink" title="2.谷歌"></a>2.谷歌</h2><p>访问<a href="https://search.google.com/search-console/welcome">Google Search Console</a>，在【网域】中填入自己的博客网址，点击【前往资源页面】——【站点地图】——【添加新的站点地图】，把上述文件地址提交即可。</p><h2 id="3-必应"><a href="#3-必应" class="headerlink" title="3.必应"></a>3.必应</h2><p>访问<a href="https://www.bing.com/webmasters/about">Webmaster Tools</a>，登录自己的微软账户后，我们发现必应有两种导入方式，一种是【手动添加网站】，另一种是【从GSC导入你的网站】，如果我们已经使用谷歌提交过，我们便可以无需验证，直接使用谷歌导入了。<br>点击【网站地图】——【提交网站地图】，把上述文件地址提交即可。</p><h2 id="4-其他"><a href="#4-其他" class="headerlink" title="4.其他"></a>4.其他</h2><p>如360搜索、搜狗搜索等，与百度的操作相同。下面只列举出各搜索引擎对应的站长平台。<br>| 搜索引擎 | 代码验证 | 文件验证 | CNAME验证 | 站长平台 |<br>| :——-: | :——-: | :——-: | :——-: | :——-: |<br>| 搜狗 | √ | √ | × | <a href="https://zhanzhang.sogou.com/">https://zhanzhang.sogou.com/</a> |<br>| 360 | √ | √ | √ | <a href="https://zhanzhang.so.com/">https://zhanzhang.so.com/</a> |</p>]]></content>
      
      
      <categories>
          
          <category> 博客技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客技巧 </tag>
            
            <tag> SEO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【hexo】将hexo部署到托管平台+绑定自定义域名</title>
      <link href="/post/fa20ec4f.html"/>
      <url>/post/fa20ec4f.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、将hexo部署到Vercel"><a href="#一、将hexo部署到Vercel" class="headerlink" title="一、将hexo部署到Vercel"></a>一、将hexo部署到Vercel</h1><div class="note info flat"><p>Vercel是一个代码托管平台，能够用来部署前端应用，此处我们用它来托管hexo的静态html界面，达到无需购买服务器的目的。</p></div><h2 id="1-创建Vercel账号"><a href="#1-创建Vercel账号" class="headerlink" title="1.创建Vercel账号"></a>1.创建Vercel账号</h2><p>官方网站注册即可：<a href="https://vercel.com/">https://vercel.com/</a><br>此处建议直接使用我们的Github账号进行注册/关联，这样我们可以直接在Vercel中找到我们的GitHub库中的项目。</p><h2 id="2-对项目进行托管"><a href="#2-对项目进行托管" class="headerlink" title="2.对项目进行托管"></a>2.对项目进行托管</h2><p>依次点击右上角【Add New…】——【Project】，在<code>Import Git Repository</code>内选择我们创建的{username}.github.io项目，点击 【Import】，表示导入我们的Github项目。<br><img src="https://figure.pages.dev/post/post1/1-1.png" width="400"><br>随后，我们在<strong>Project Name</strong>中起一个只有字母、数字或者或者连字符的项目名称，其他的不用变，点击 【Deploy】。<br><img src="https://figure.pages.dev/post/post1/1-2.png" width="400"><br>我们打开 <code>&#123;ProjectName&#125;.vercel.app</code>(其中{ProjectName}为我们上面项目起的名称)，发现打开后为我们的博客主页，证明我们已经部署成功！（由于目前Vercel被墙，可能需要挂节点进行确认）</p><hr><h1 id="二、绑定自定义域名"><a href="#二、绑定自定义域名" class="headerlink" title="二、绑定自定义域名"></a>二、绑定自定义域名</h1><div class="note info flat"><p>这一步并非必要，如果目前还不想买域名可以先跳过。</p></div><h2 id="1-购买域名"><a href="#1-购买域名" class="headerlink" title="1.购买域名"></a>1.购买域名</h2><p>（略）<br>可先使用<a href="https://www.freenom.com/zh/index.html?lang=zh">freenow</a>申请一个免费域名。</p><h2 id="2-添加解析"><a href="#2-添加解析" class="headerlink" title="2.添加解析"></a>2.添加解析</h2><p>在Vercel中进入我们上文中创建好的项目，点击右上角的 <code>View Domains</code>，我们可以看到已经创建好的 <code>&#123;ProjectName&#125;.vercel.app</code>，我们的目标是将自己购买的域名绑定到这个项目中。<br>在<code>Domains</code>内添加我们购买的域名（以我的域名 <code>blackpumkpin.xyz/</code>为例），然后会提示我们是否重定向至 <code>www.blackpumkpin.xyz/</code>，我们选择 <code>ADD</code>。<br><img src="https://figure.pages.dev/post/post1/1-3.png" width="400"><br>然后我们需要添加以下两条解析记录：</p><div class="table-container"><table><thead><tr><th style="text-align:center">Type</th><th style="text-align:center">Name</th><th style="text-align:center">Value</th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:center">@</td><td style="text-align:center">76.76.21.21</td></tr><tr><td style="text-align:center">CNAME</td><td style="text-align:center">www</td><td style="text-align:center">cname.vercel-dns.com.</td></tr></tbody></table></div><p>此时我们返回域名商的控制台，进入DNS管理，添加上述两条解析即可。<br>如果我们想要自定义二级域名，我们可以使用CNAME解析，在Name处添加我们想要的自定义二级域名即可。</p><h2 id="3-修改配置文件"><a href="#3-修改配置文件" class="headerlink" title="3.修改配置文件"></a>3.修改配置文件</h2><p>打开_config.yml，在<strong>URL</strong>行修改自己的url为自己的自定义域名。</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://www.blackpumpkin.xyz</span></span><br></pre></td></tr></table></figure><hr><h1 id="三、其他托管平台"><a href="#三、其他托管平台" class="headerlink" title="三、其他托管平台"></a>三、其他托管平台</h1><p><a href="https://app.netlify.com/">Netlify</a>的速度据说比Vercel快一些。<br>操作步骤与Vercel基本一致，都是通过关联自己的github账户来导入我们的{username}.github.io项目，完成后我们会获得一个形如<code>xxx.netlify.app</code>的链接，打开后为我们的博客主页，证明我们已经部署成功。<br>绑定自定义域名的操作也是相同的，只是解析记录有所区别：</p><div class="table-container"><table><thead><tr><th style="text-align:center">Type</th><th style="text-align:center">Name</th><th style="text-align:center">Value</th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:center">@</td><td style="text-align:center">75.2.60.5</td></tr><tr><td style="text-align:center">ANAME</td><td style="text-align:center">@</td><td style="text-align:center">apex-loadbalancer.netlify.com</td></tr><tr><td style="text-align:center">CNAME</td><td style="text-align:center">www</td><td style="text-align:center">{xxx}.netlify.app</td></tr></tbody></table></div><p>记得换掉{xxx}的内容。<br>同样的，进入域名商控制台的DNS管理，添加上述解析即可。（自定义二级域名的操作相同，不再赘述）</p><hr><h1 id="拓展阅读：将二级域名部署到不同的托管平台"><a href="#拓展阅读：将二级域名部署到不同的托管平台" class="headerlink" title="拓展阅读：将二级域名部署到不同的托管平台"></a>拓展阅读：将二级域名部署到不同的托管平台</h1><p>如果我们已经使用Vercel将主域名进行了部署，那么我们也可以使用其他的平台对二级域名进行部署。</p><div class="table-container"><table><thead><tr><th style="text-align:center">Type</th><th style="text-align:center">Name</th><th style="text-align:center">Value</th><th style="text-align:center">备注</th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:center">@</td><td style="text-align:center">76.76.21.21</td><td style="text-align:center">Vercel部署的主域名A解析</td></tr><tr><td style="text-align:center">CNAME</td><td style="text-align:center">www</td><td style="text-align:center">cname.vercel-dns.com.</td><td style="text-align:center">Vercel部署的主域名CNAME解析</td></tr><tr><td style="text-align:center">CNAME</td><td style="text-align:center">{netlify}</td><td style="text-align:center">{xxx}.netlify.app</td><td style="text-align:center">Netlify部署的二级域名CNAME解析</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 博客技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客技巧 </tag>
            
            <tag> Vercel </tag>
            
            <tag> 自定义域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分享一种可以给外服手游氪金的卡种——美国运通借记卡</title>
      <link href="/post/6c05f09f.html"/>
      <url>/post/6c05f09f.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>最近碧蓝档案日服开始了两周年的活动，在国内也是出圈了一小波，为师是十分的欣慰啊！不过在nga和贴吧看到很多日服的sensei不了解应该如何氪金，于是论坛上的很多人都推荐去办一张国外的信用卡/储蓄卡。<br>在此，我分享一种除visa外，可以进行外服游戏充值的卡种——美国运通借记卡。</p></div><div class="note default flat"><p>本文已同步至nga蔚蓝档案板块<a href="https://bbs.nga.cn/read.php?tid=35268602">同名贴</a>，可综合各楼层回复排查出现的问题。</p></div><h1 id="一、国内对外服游戏氪金的方式"><a href="#一、国内对外服游戏氪金的方式" class="headerlink" title="一、国内对外服游戏氪金的方式"></a>一、国内对外服游戏氪金的方式</h1><p>我们都知道，想要给外服游戏充值，大多数我们日常使用的支付方式（支付宝、微信等）都是不起作用的。于是，排除肉身前往国外这种简单粗暴的方式后，我们需要找到一些媒介去处理：</p><h2 id="1-国外（或港澳台）友人帮助"><a href="#1-国外（或港澳台）友人帮助" class="headerlink" title="1.国外（或港澳台）友人帮助"></a>1.国外（或港澳台）友人帮助</h2><p>这种方式的靠谱程度与你认识友人的靠谱程度完全相关，一般来说，帮助你进行氪金操作的人分为两种，一种是你现实生活中在国外生活的同学、亲戚，这种可以说是非常方便的，一身轻松；另外一种是自己所在的社区、QQ群等较有威望的大佬或好心人，这种就需要你进行一定程度的甄别，另外他们可能会收取一定的辛苦费，建议先和通过他人帮助过的人咨询一下是否安全、合理。<br>便捷程度：⭐⭐⭐<br>靠谱程度：⭐⭐⭐⭐<br>氪金程度：⭐⭐</p><h2 id="2-商家代充"><a href="#2-商家代充" class="headerlink" title="2.商家代充"></a>2.商家代充</h2><p>tb上有很多的商家会帮助你进行代充，但是翻车概率是这几种方式中最大的，因为有的黑心商家会使用黑卡进行充值，而黑卡是一定会被封号的。简单来说，黑卡就是不良商家盗刷他人的信用卡进行充值，当持卡人发现盗刷后会要求退款，这样游戏厂商就收不到钱了，等于黑心商家空手套白狼，而玩家的账号就会被惩罚，轻则回收充值道具，重则封号。不光是BA，但凡是个游戏社区，因为代充而引起争端的帖子都是一大堆，这需要玩家找代充的时候擦亮眼睛，多在社区搜索一下商家的名称有没有坑，谨防黑心商家！<br>另外一点，即使是正规、好评如潮的商家，他们店铺的代充也不一定是优惠的，（这是肯定的，毕竟商家也是要吃饭的）比如你想要在一个游戏里充值1000日元，然后拿出汇率计算器算得大约相当于人民币52元，这时你发现，商家的1000日元商品售价一般在60元以上。（截取自tb某商家价目表）<br><img src="https://figure.pages.dev/post/post4/post4_1.png" width="400"><br><br>便捷程度：⭐⭐⭐⭐<br>靠谱程度：⭐⭐<br>氪金程度：⭐⭐⭐</p><h2 id="3-google-play直充"><a href="#3-google-play直充" class="headerlink" title="3.google play直充"></a>3.google play直充</h2><p>google play直充可以说是非常的便捷了，拿出手机便可一键支付，并且安全性非常有保障。这是我最为推荐的支付方式。<br>便捷程度：⭐⭐⭐⭐<br>靠谱程度：⭐⭐⭐⭐⭐<br>氪金程度：⭐</p><hr><h1 id="二、为什么你需要一张国外银行卡？"><a href="#二、为什么你需要一张国外银行卡？" class="headerlink" title="二、为什么你需要一张国外银行卡？"></a>二、为什么你需要一张国外银行卡？</h1><p>很多朋友在登陆账号时大概率会想到google play里直接进行氪金，但受限于大陆的特殊机制，我们是无法直接进行氪金的。<br>我们打开play商店，依次选择头像——付款和订阅——付款方式，可以看到有四种方式进行氪金：<br><img src="https://figure.pages.dev/post/post4/post4_2.png" width="400"><br><br>我们依次分析这四种方式。</p><h2 id="1-添加信用卡或借记卡"><a href="#1-添加信用卡或借记卡" class="headerlink" title="1.添加信用卡或借记卡"></a>1.添加信用卡或借记卡</h2><p><img src="https://figure.pages.dev/post/post4/post4_3.png" width="400"><br><br>这种方式只支持国外的银行卡，国内的是不支持的，如果你把国内的银行卡输入进去，会显示“付款方式无效或不受支持”。</p><h2 id="2-添加PayPal"><a href="#2-添加PayPal" class="headerlink" title="2.添加PayPal"></a>2.添加PayPal</h2><p><img src="https://figure.pages.dev/post/post4/post4_4.png" width="400"><br><br>如果你有国外的手机号，你可以尝试一下。我这里只有国内的手机号，输入邮箱和手机号后，会弹出“国家或地区目前不受支持”的提示。<br><img src="https://figure.pages.dev/post/post4/post4_5.png" width="400"><br></p><h2 id="3-兑换代码"><a href="#3-兑换代码" class="headerlink" title="3.兑换代码"></a>3.兑换代码</h2><p><img src="https://figure.pages.dev/post/post4/post4_6.png" width="400"><br><br>这种方式是要求你输入google paly自家出品的礼品卡。实际上，礼品卡的获取方式与第一章的氪金方式是复合的，即你想要在国内买到礼品卡，你大概率还是需要用到朋友或者店铺帮忙，因此此方法不做详细介绍。</p><h2 id="4-在便利店购买google-play抵用金"><a href="#4-在便利店购买google-play抵用金" class="headerlink" title="4.在便利店购买google play抵用金"></a>4.在便利店购买google play抵用金</h2><p><img src="https://figure.pages.dev/post/post4/post4_7.png" width="400"><br><br>这种方式是在要求你拥有合格的银行卡后，从银行卡先氪金到你的Google账户，然后可以从账户直接氪金到你的游戏里（可以理解为steam充值卡）。但你想要使用这种方式，不还是需要一张能用的卡吗！此方法不做详细介绍。<br>综上所述，你需要一张对于google play来说合法的一张银行卡（借记卡/信用卡）。这就引入到了我们今天的主题——申请一张美国运通的借记卡。</p><hr><h1 id="三、美国运通借记卡的特点"><a href="#三、美国运通借记卡的特点" class="headerlink" title="三、美国运通借记卡的特点"></a>三、美国运通借记卡的特点</h1><p>其实在nga和贴吧，我已经看到了很多大佬们分享的国外银行卡申请教程了，可以说写的是非常的贴心了。不过我发现，这些一般都是visa家的信用卡，而因为个人原因，对于信用卡，其实我是比较抵触的。这里我便分享一种国外的<strong>借记卡</strong>：美国运通。<br><img src="https://figure.pages.dev/post/post4/post4_8.png" width="400"><br><br>这里介绍一下美国运通的优点：</p><ul><li>免费申请，无手续费</li><li>卡种为借记卡，无需担心年费、征信等问题</li><li>无需手动购汇，即不需要将人民币兑换成外币这一步操作</li></ul><p>然后再来说一下缺点吧：</p><ul><li>卡种较为小众</li><li>申请银行为兴业银行，网点可能较少（据了解，广发银行也有相关业务，但我不太了解就不做过多介绍了）</li><li>卡种为借记卡，不是信用卡（这一点尤为重要！下文会对这点进行说明）</li></ul><hr><h1 id="四、办理流程"><a href="#四、办理流程" class="headerlink" title="四、办理流程"></a>四、办理流程</h1><h2 id="0-办理前的准备"><a href="#0-办理前的准备" class="headerlink" title="0.办理前的准备"></a>0.办理前的准备</h2><p>1.我们需要记住一点，这张卡是借记卡而非信用卡，不能透支消费，我们要先存钱进去，在支付后会冻结这笔钱(1-2天)，等到款项进入商家账户之后才会完成结算流程。在结算完毕之前，建议不要动用这张卡进行任何消费。</p><p>2.兴业银行比较小众，所以我们最好打开地图查看一下，你在的附近是否有兴业的网点。</p><h2 id="1-网申银行卡"><a href="#1-网申银行卡" class="headerlink" title="1.网申银行卡"></a>1.网申银行卡</h2><p>我们下载兴业银行app，注册账号，搜索办卡——申请借记卡——热卡提前到手，我们会在里面发现有“美国运通标准借记卡”和“美国运通安愉借记卡”，这里我们选择标准借记卡（安愉有很多的限制，好像是发给50岁以上的人），点击立即申请，会出现填写姓名、身份证等信息的页面，我们如实填写（见下图）。<br><img src="https://figure.pages.dev/post/post4/post4_9.png" width="400"><br><br>提交后，我们的手机上会接收到以下短消息：<br><img src="https://figure.pages.dev/post/post4/post4_10.png" width="400"><br><br>证明我们已申请成功，只需等待制卡完成后邮寄到你的居住地即可，一般需要一周左右的时间。</p><h2 id="2-网点激活"><a href="#2-网点激活" class="headerlink" title="2.网点激活"></a>2.网点激活</h2><p>收到邮件后，我们会看到以下内容：<br><img src="https://figure.pages.dev/post/post4/post4_11.png" width="400"><br><br>我们连卡带纸，<strong>以及自己的身份证</strong>，全都拿去兴业银行的线下网点，和营业厅的大堂经理说一下激活银行卡，他会带我们去终端机填开户的单子、拍人脸等操作，我们按照流程一一走完。<br>流程走完后，我们打开手机上的兴业银行app，绑定我们的银行卡，线下部分就算大功告成了！</p><h2 id="3-绑定google-play"><a href="#3-绑定google-play" class="headerlink" title="3.绑定google play"></a>3.绑定google play</h2><p>打开google play，点击头像——付款和订阅——付款方式——添加信用卡或借记卡，我们输入卡号等信息，点击保存即可。</p><p>2.4更新：关于地址信息，这个看你玩的是日服还是国际服，日服就填一个日本的地区，国际服就随意了，HK什么的都可以，然后这个地址你填的是什么，绑的时候就需要挂哪个地区的节点.<br><img src="https://figure.pages.dev/post/post4/post4_12.png" width="400"><br></p><h2 id="4-氪金操作"><a href="#4-氪金操作" class="headerlink" title="4.氪金操作"></a>4.氪金操作</h2><p>我们可以在兴业银行app内绑定我们的其他银行卡/支付宝/微信，向美国运通卡内进行转账操作，此处不做详细介绍。<br>转账后，我们便可以打开BA，在游戏内进行氪金了！当然也不止BA，理论上所有可以通过google play氪金的游戏，你都可以通过这种方法进行氪金了！<br>现在我们选择青辉石购入，就可以选择购买你想要的服务了：</p><p><img src="https://figure.pages.dev/post/post4/post4_13.png" width="400"><br><br>购买完成后，我们需要保持银行卡内储值足够进行支付。打开兴业银行app，你会发现，点击财富总览，我们的钱还没有被扣除；但是点击账户查询，在活期可用内，我们会发现，钱确实是被扣除了。这就是我们上文提到的，在支付后会冻结这笔钱，等到款项进入商家账户之后才会完成结算流程。<br>在等待一般一天后，我们再进入app查看，发现财富总览和户查询内都已被扣除了，此时点击交易明细，我们可以看到实际上的氪金金额了。<br><img src="https://figure.pages.dev/post/post4/post4_14.png" width="400"><br><br>可以发现，自己氪金所花费的人民币金额比代充要便宜很多。</p><hr><h1 id="五、其他想说的"><a href="#五、其他想说的" class="headerlink" title="五、其他想说的"></a>五、其他想说的</h1><p>没了（……）<br>这张卡是我去年下半年办理的，在入坑BA后，看到有很多的老师苦于不会氪金外服游戏，于是写下了这篇心得，希望可以切实帮到其他的老师们，有需要请教的也可以进行交流。</p>]]></content>
      
      
      <categories>
          
          <category> 网络技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信用卡申请 </tag>
            
            <tag> 游戏氪金 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自用的一些完全免费的机场</title>
      <link href="/post/2d1f00a6.html"/>
      <url>/post/2d1f00a6.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="错误的密语，请再试一次！" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="6d08521221136c2c2911ec3b4bcdb1e9386737f215e110b42dfdf81b2a687a8c">a3359da1fa2e9d25e0a0ca4e01c111bf16d19aee242e1093320aaf13687985b201e0ad7af5befa9d2b843ab1ae82e3396608f98f3c5f0fa762bb98e2fe534f749a18f55b84430589ff57994a73f82036d052f1484690678363cbf5e515d7ea4f895682b0fdcdceca502df31a508aa1927e61f8e08b125678dab4d4470d6edd89fd95ed39c03cc1ce4de6bcc1d27e104acb35808476df9e2c20a597be87e35949e5a6fb8859dddd6ef5ce64e1850567888c914e251605c6d1f2338b5fc22bb2513e2956de5ffe3f0ef2393463c5a49f7b7fddedfe8634781154969f76bc27b4ad567f98809bc70d854b42e698cf62d471dcf5131ddb5864fef8c2adaf05f8b4b328ca2ae769208301d534d19ccc1c002cd7920277239dfa0d3194c3de165e9947975e907529af161a3ebdc4e82e9bf8282b2e14bdf9293d83c7f2832a51cdca1d4df36830d6cf137beefc5212b115bc31f79efdb6ed5f1123da3128654704a2a921193d699534ad13ba2ce3b4d7f4c6ebd55b33b1b1882f235b080c6e5b5bf2963c19bd811147e434c285db3e4508488a254fa466591b55ee695969d5523fa897d2fd0767dc3144ce159220cb551c613d1118c68c342eb9994ccc47522d11a25e361f787f00722a2b5a370ce2d0eaab51346832c7e610f33deb5ee207d9d0663ab4fcda1f9e1490d61f0f675e244c742df8bbe1b4ebd8ac5fc108ad99d2e81c2d55e6d5a6ea91525f3766f60e495747a2e628baca306f20d74400425d1a45437009abade17efd6305272b6ee55e1dac47bca0f1f1b59464874f863a43e15f53d819fbfecd9ae1e110193f694b766afaa1219a74805bc0985c064534ca50e5e7dfa05033a8848b2a2aacb4547900a67b2dd77165441a6b218d2a78205c032d8a26ad54fa75536025cf51987c38000fc992fb9acda67fce8edff6f34c200f169ece59b67b689f2f9250ac39df7ce25ca6f8987f1345562ce33918d187cc6c24473e9de258407cfbf52e9d4721a2ebeb56603efc58307c6eec38e561752f2181af4da1b26aaee135bb6550a1c506bf9e29e99eecd66c3e8f5b8d1be6fe1234fea9d30de0261db6d9cb5956974f420961f7e256ce37c574a607868cedaf344addee9c5290776375367ac6454c511f779ef0ac0b117185af1a3f54629cda7c728b5546177a748ba904768ecaa963b164cf3a3c2dc3427baa8d1ea06063827542120d7fe0b00093710870e329ba6ad1fa7a2ce0938fb636f583cc424457cb8748e9bbc9ed5fbf7542480714f805e5918dd4273946e07608b8b27c7bf7d5df37789784de6308844ef42a618027be10fe04a5cbdb143fd250fb4154e6742baf1fdf6b62b261705a21340a46bcf6877b1c84072f4a39e032e116aa5e3570c26ece007e5998862f2e9d441e5f63eaa55d9fea3990089f2733e78b3cd39498a274047861252845488dea5660d2d443ebe61c0559808b6fd35a695627875bfde7473134075b9b8bdf7b8c060bef37407146896d2b6b4f69eabe06b583b42bd4bb0fa64c5fbc2c99ac2930e80a73ff676d23d98720ac91859634c4631e0970bc0e42bd3dd1ed4cb0062353da48b1e9417dacafe9c665b54593e275cb9c142f5c458c37fcf6481c58f2fe5e6f144f68093338ebce929ad7ed4b2c4d699fb8c797f845c33d5d86a4e6e7a672b224d84f37a1d2aed36464cc417bae94512df2e337d502b74c48c66470f14014d3aa337f9d045a33442267e3abb67c45d3011cd02e8310eabad9c988a8704cccbe9141aa23b7aaa93838b1a69b4d7ba69176cb99a832095eb7af7006a2afd6c1f5c165d9c6401613f48a4e81d552b1767fc5dfc48c20a8c7e99440c19e798ab34a08f0e54c311fc924bca792eb5205b294bc63e0943524258df80faead8dfaff2a5d898d04a10e902cd1cc5210d6f0012d4e6b976ff1fc70a241cf8a8bfbbeb98138d2478991feb289662fe3d8d4a6ad2ecd97544725667f9ab143300468f8b329e13192c3fb5f2c16c5d3c170aa65cc84cb2deadcdeb5ea753416e00f0e07c52efdfbce1b2687edd4d7e8ed332ade0201970b8af67ffc3b839064c61126759e1f626a4d3cc3b5daf9320e82591125dec8307e6c4162cf42b94052e45f2cecc60032d8920e75032962840a8b20098f6bd28e929f4daf8496e57dc4e4e83db21d3f9dd02d77d4c2ef50ca941e630c956d5bb193ed731f5b63f6c4b4519c0314ec4e7e4d04cb18a1b8a8ad22e70500ba44bafc298baa6f4c2a7aa1a7f24e18e7d053b935b22696f7d97fef4586c274d5023f1f887a0e42c6d5cee232b086a7875cc3a63f2a417c700d9ef281fa99a2d33f155cb34ae70b5d3e4277f5ee5a69d271681d9c24bd9a52ad4bb47b3eba1ad65ea435acc3bdaa40ea1e45f74f61c8509901967f41b22e5b23f4aa46504d4e369a007f0409822bb2ea73d725fc031d3b8bdeecadf2d9735655c77e70812fb275448968bd877ca1d9cd66716e51bab5016ce803c7e5f747bff2dbb33742c22aa43cca8eb8bbe6945173396bcf626e56aff1bd6764541f8fceef78c967cf6101108a01755a3f6cc2c62e55dcd083f82d539fc6b9aff8d0a1bc1e6b4f8389445199eb71ee0b01541b9e63a8df266abdec692039cb9d88f51bc3273db199c9414f88ad527fb8a0e238b3f4f86e3f628a7b03ae3ca308036e6474080faeaa63d3b6d6f398cd651fdaa85a19e24b36c3a0a273c8bf1dd494dc4f120d1f672a03ea1b374900472ac5d84093e1aff36bedba33178a863f0d25e1818fdd269fd2dcfd081e15304ca41f3cb6aa4f8884983a96ca5f7a4f3c496e37c3a8ca22e8dc6a4c9e2b5e75a1009dacc8ef02a8d08208d63e0b077db0b053c9b22b7a6c722d05638f643c6926a19e661e732e0d0923c2ccc0a5cd587fe1e5e64b06864bd3b3d89dc7d44c639e53a5d279ecb4053b4b95614d89da3b9db44b9502a5c4e35b404486f73ff8c3df7e2f10699c5d2a26abb7c59c0418621f7020c2443f52f4775a16d21cc09bc7165a9a5c4447c160e83b85d6477ba55ddf9801a70917f163ee12bf039c9527d33895d9e1dea8bc86a464ba7424d5219d498f42fca90c275d217ad758643b086f42d97211e237f611fa73b9c802ccca1ee01c8c2d8f638122e182861949a43f2afd64fbd86d64c3a8b2d5374cb2e19c617a766c1228d2673cd0041095847119710da2684d0f6ce157a75dc451705efae3bd1ef981bb2a5a328302c7578f67775afd28440f20a6e37bff9a01</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-shrink">      <input class="hbe hbe-input-field hbe-input-field-shrink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-shrink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-shrink">Hitherto shalt thou come,but no further!</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 网络技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机场 </tag>
            
            <tag> clash </tag>
            
            <tag> 梯子 </tag>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【hexo】markdown书写规范速查</title>
      <link href="/post/13950859.html"/>
      <url>/post/13950859.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>总结一些markdown的编写格式。<br>具体可参考：<a href="https://blog.csdn.net/u014061630/article/details/81359144">Markdown语法图文全面详解(10分钟学会)</a></p></div><h1 id="一、标题级别"><a href="#一、标题级别" class="headerlink" title="一、标题级别"></a>一、标题级别</h1><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 第一级标题</span><br><span class="line">## 第二级标题</span><br><span class="line">### 第三级标题</span><br><span class="line">#### 第四级标题</span><br><span class="line">##### 第五级标题</span><br><span class="line">###### 第六级标题</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><img src="https://figure.pages.dev/post/post2/post2_1.png" alt="post2_1"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h1 id="二、文字格式"><a href="#二、文字格式" class="headerlink" title="二、文字格式"></a>二、文字格式</h1><div class="note info flat"><p>实际上，如果比较熟悉HTML语言的话，这些差不多都是共通的，除了加粗、斜体等少量markdown表达方式可能有些不同。如加粗，除了 <code>**markdown**</code>方式以外，你依然可以使用 <code>&lt;b&gt;HTML&lt;/b&gt;</code>方式。<br>以下文字格式包括加粗、斜体、下划线、删除线、颜色、字号、文字背景色。</p></div><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**加粗文字**</span><br><span class="line">*斜体文字*</span><br><span class="line">&lt;u&gt;下划线&lt;/u&gt;</span><br><span class="line">~~删除线~~</span><br><span class="line">***加粗斜体文字***</span><br><span class="line">&lt;font size = 6&gt;6号字&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;楷体&quot;&gt;楷体&lt;/font&gt;</span><br><span class="line">&lt;font color=green&gt;绿色&lt;/font&gt;</span><br><span class="line">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=Orange&gt;橙色背景色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>加粗文字</strong></p><p><em>斜体文字</em></p><p><u>下划线</u></p><p><del>删除线</del></p><p><strong><em>加粗斜体文字</em></strong></p><p><font size = 6>6号字</font><br></p><p><font face="楷体">楷体</font><br></p><p><font color=green>绿色</font><br></p><table><tr><td bgcolor=Orange>橙色背景色</td></tr></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h1 id="三、代码"><a href="#三、代码" class="headerlink" title="三、代码"></a>三、代码</h1><h2 id="1-代码块"><a href="#1-代码块" class="headerlink" title="1.代码块"></a>1.代码块</h2><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`我是高亮代码块`</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><code>print（&#39;hello world&#39;）</code></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-代码区块"><a href="#2-代码区块" class="headerlink" title="2.代码区块"></a>2.代码区块</h2><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\```java</span><br><span class="line">public class Hello&#123;</span><br><span class="line">public static void main(String args[])&#123;</span><br><span class="line">System.out.println(&quot;Hello World&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">\```</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h1 id="四、列表"><a href="#四、列表" class="headerlink" title="四、列表"></a>四、列表</h1><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">有序号列表（注意后面有空格）：</span><br><span class="line">1. </span><br><span class="line">2. </span><br><span class="line">3. </span><br><span class="line"></span><br><span class="line">无序号列表：</span><br><span class="line">* 姓名</span><br><span class="line">* 年龄</span><br><span class="line"></span><br><span class="line">+ 入学日期</span><br><span class="line">+ 毕业日期</span><br><span class="line"></span><br><span class="line">- 兴趣</span><br><span class="line">- 爱好</span><br><span class="line"></span><br><span class="line">下面展示嵌套序号列表：</span><br><span class="line">- 技能</span><br><span class="line">  - Adobe</span><br><span class="line">    - PS</span><br><span class="line">    - PR</span><br><span class="line">    - AE</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p>有序号列表（注意后面有空格）：</p><ol><li></li><li></li><li></li></ol><p>无序号列表：</p><ul><li>姓名</li><li>年龄</li></ul><ul><li>入学日期</li><li>毕业日期</li></ul><ul><li>兴趣</li><li>爱好</li></ul><p>下面展示嵌套序号列表：</p><ul><li>技能<ul><li>Adobe<ul><li>PS</li><li>PR</li><li>AE</li></ul></li></ul></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h1 id="五、引用区块"><a href="#五、引用区块" class="headerlink" title="五、引用区块"></a>五、引用区块</h1><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;引用文字第一行&lt;br&gt;</span><br><span class="line">&gt;引用文字第二行</span><br><span class="line">&gt;&gt;引用文字第二层嵌套</span><br><span class="line">&gt;&gt;&gt;引用文字第三层嵌套</span><br><span class="line">&gt;</span><br><span class="line">&gt;引用文字第三行列表</span><br><span class="line">&gt; 1. 第一项</span><br><span class="line">&gt; 2. 第二项</span><br><span class="line">&gt; + 第一项</span><br><span class="line">&gt; + 第二项</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><blockquote><p>引用文字第一行<code>&lt;br&gt;</code><br>引用文字第二行</p><blockquote><p>引用文字第二层嵌套</p><blockquote><p>引用文字第三层嵌套</p></blockquote></blockquote><p>引用文字第三行列表</p><ol><li>第一项</li><li>第二项</li></ol><ul><li>第一项</li><li>第二项</li></ul></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h1 id="六、分隔线"><a href="#六、分隔线" class="headerlink" title="六、分隔线"></a>六、分隔线</h1><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"></span><br><span class="line">***</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><hr><hr><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h1 id="七、表格"><a href="#七、表格" class="headerlink" title="七、表格"></a>七、表格</h1><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">|序号|工程量|备注|</span><br><span class="line">|---|---|---|</span><br><span class="line">|1|50|无|</span><br><span class="line">|2|60|无|</span><br><span class="line">|3|70|有扣减|</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><div class="table-container"><table><thead><tr><th>序号</th><th>工程量</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>50</td><td>无</td></tr><tr><td>2</td><td>60</td><td>无</td></tr><tr><td>3</td><td>70</td><td>有扣减</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h1 id="八、链接和图片"><a href="#八、链接和图片" class="headerlink" title="八、链接和图片"></a>八、链接和图片</h1><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[百度一下](https://www.baidu.com)</span><br><span class="line"></span><br><span class="line">&lt;https://www.baidu.com&gt;</span><br><span class="line"></span><br><span class="line">![code](https://figure.pages.dev/img/post1.jpg)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><a href="https://www.baidu.com">百度一下</a></p><p><a href="https://www.baidu.com">https://www.baidu.com</a></p><p><img src="https://figure.pages.dev/img/post1.jpg" alt="code"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h1 id="九、公式"><a href="#九、公式" class="headerlink" title="九、公式"></a>九、公式</h1><div class="note info flat"><p>Markdown Preview Enhanced 使用 KaTeX 或者 MathJax 来渲染数学表达式。</p></div><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">编写规范</button></li><li class="tab"><button type="button" data-href="#test1-2">编写效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">行内公式：$$&#123;f(x)=ax^2+bx+c&#125;$$</span><br><span class="line"></span><br><span class="line">块内公式：</span><br><span class="line">$$</span><br><span class="line">&#123;Ax^2+By^2+Cx+Dy+E=0&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p>行内公式：</p><script type="math/tex; mode=display">{f(x)=ax^2+bx+c}</script><p>块内公式：</p><script type="math/tex; mode=display">{Ax^2+By^2+Cx+Dy+E=0}</script><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 博客技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客技巧 </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【hexo】分享一下用hexo+github创建博客的过程</title>
      <link href="/post/86516c22.html"/>
      <url>/post/86516c22.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>由于本人对代码一窍不通，在创建博客的过程中，基本就是靠各位大佬们的教程和百度照葫芦画瓢，因此还是在这里做一个总结，防止后来继续踩相同的坑，同时也想告诉各位，创建博客，不需要任何的计算机知识，和我一样的小白是完全可以创建出自己的博客的。</p></div><div class="note default flat"><p>在此感谢<a href="https://www.fomal.cc/posts/e593433d.html#1-%E5%89%8D%E8%A8%80">Fomalhaut大佬的教程</a>，讲的非常详细！</p></div><h1 id="一、前置条件"><a href="#一、前置条件" class="headerlink" title="一、前置条件"></a>一、前置条件</h1><h2 id="1-node-js"><a href="#1-node-js" class="headerlink" title="1.node.js"></a>1.node.js</h2><p>官方网站下载即可：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a><br>检测是否安装成功：在cmd中执行 <code>node -v</code> 和 <code>npm -v</code> ，出现版本号即说明安装成功。</p><h2 id="2-Git"><a href="#2-Git" class="headerlink" title="2.Git"></a>2.Git</h2><p>官方网站下载即可：<a href="https://git-scm.com/">https://git-scm.com/</a><br>由于官网下载太慢，可以通过淘宝的开源镜像下载：<code>https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/</code><br>检测是否安装成功：在cmd中执行 <code>git --version</code> ，出现版本号即说明安装成功。</p><h2 id="3-Github"><a href="#3-Github" class="headerlink" title="3.Github"></a>3.Github</h2><p>官方网站注册即可：<a href="https://github.com/">https://github.com/</a><br>在账号创建成功后，新建仓库，仓库名称填写为 <code>&#123;username&#125;.github.io</code>，其中{username}为自己GitHub账号的用户名，仓库类型选择公共（免费），勾选添加README<br>以后博客的相关文件都会上传至这个仓库内，这也可以检测你的博客是否更新成功。<br>其实不使用GitHub也是可以的，不过作为一个小白，先把github设置搞明白即可，以后可以进行更换。</p><hr><h1 id="二、安装hexo"><a href="#二、安装hexo" class="headerlink" title="二、安装hexo"></a>二、安装hexo</h1><h2 id="1-添加国内淘宝镜像（加快下载速度）"><a href="#1-添加国内淘宝镜像（加快下载速度）" class="headerlink" title="1.添加国内淘宝镜像（加快下载速度）"></a>1.添加国内淘宝镜像（加快下载速度）</h2><p>在cmd中执行：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h2 id="2-git-base-控制台"><a href="#2-git-base-控制台" class="headerlink" title="2.git base 控制台"></a>2.git base 控制台</h2><p>在一个合适的文件夹内右键，点击 <code>Git Bash Here</code>，即可出现git的控制台，<strong>要注意下面的操作全部在控制台内操作，而不是cmd了。</strong></p><h2 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3.安装hexo"></a>3.安装hexo</h2><p><code>npm i hexo-cli -g</code><br>检测是否安装成功：<code>hexo -v</code>，出现版本号即说明安装成功。</p><hr><h1 id="三、连接GitHub和hexo"><a href="#三、连接GitHub和hexo" class="headerlink" title="三、连接GitHub和hexo"></a>三、连接GitHub和hexo</h1><h2 id="1-输入GitHub用户名"><a href="#1-输入GitHub用户名" class="headerlink" title="1.输入GitHub用户名"></a>1.输入GitHub用户名</h2><p><code>git config --global user.name &#123;username&#125;</code><br>其中{username}为自己GitHub账号的用户名。<br>一个小坑：<strong>GitHub的用户名和昵称一定要区分开！</strong></p><h2 id="2-输入GitHub注册邮箱"><a href="#2-输入GitHub注册邮箱" class="headerlink" title="2.输入GitHub注册邮箱"></a>2.输入GitHub注册邮箱</h2><p><code>git config --global user.email &#123;useremail&#125;</code><br>其中{useremail}为自己GitHub账号的注册邮箱。</p><h2 id="3-生成密钥"><a href="#3-生成密钥" class="headerlink" title="3.生成密钥"></a>3.生成密钥</h2><p><code>SSH key：ssh-keygen -t rsa -C &#123;useremail&#125;</code><br>其中{useremail}为自己GitHub账号的注册邮箱。</p><h2 id="4-查看SSH-key"><a href="#4-查看SSH-key" class="headerlink" title="4.查看SSH key"></a>4.查看SSH key</h2><p>进入路径<strong>C:\Users\Astar.ssh\id_rsa.pub</strong>，右键记事本打开该pub文件，可以看到以<strong>ssh-rsa</strong>为首的一大段内容，复制下来。<br>以上也可在Git Bash控制台内输入 <code>cat ~/.ssh/id_rsa.pub</code>，也可以看到相同的内容。</p><h2 id="5-在Github内创建密钥"><a href="#5-在Github内创建密钥" class="headerlink" title="5.在Github内创建密钥"></a>5.在Github内创建密钥</h2><p>打开GitHub，进入<strong>设置——SSH and GPG keys</strong>，新建一个SSH，名称随意，下一栏中的内容粘贴为上一步中输出的内容。</p><h2 id="6-检测是否连接成功"><a href="#6-检测是否连接成功" class="headerlink" title="6.检测是否连接成功"></a>6.检测是否连接成功</h2><p><code>ssh -T git@github.com</code></p><p>如果出现以下内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Are you sure you want to <span class="built_in">continue</span> connecting(<span class="built_in">yes</span>/no)?</span><br></pre></td></tr></table></figure><p>输入 <code>yes</code>即可，随后出现自己的用户名即说明连接成功。</p><h2 id="7-无法连接至Github的解决方案"><a href="#7-无法连接至Github的解决方案" class="headerlink" title="7.无法连接至Github的解决方案"></a>7.无法连接至Github的解决方案</h2><div class="note default flat"><p><a href="https://blog.csdn.net/weixin_41287260/article/details/124368189">Git问题：解决“ssh:connect to host github.com port 22: Connection timed out”</a></p></div><p>在上一步中，如果出现以下内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh: connect to host github.com port 22: Connection timed out</span><br></pre></td></tr></table></figure><p>说明我们无法与Github建立连接，于是我们可以通过更换端口的方式解决。<br>在连接Github之前，进入路径<strong>C:\Users\Astar.ssh\id_rsa.pub</strong>，新建config文本文档，输入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">User &#123;usermail&#125;</span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line">Port 443</span><br></pre></td></tr></table></figure><p>其中{useremail}为自己GitHub账号的注册邮箱。</p><h2 id="8-修改本地-config-yml文件"><a href="#8-修改本地-config-yml文件" class="headerlink" title="8.修改本地_config.yml文件"></a>8.修改本地_config.yml文件</h2><p>使用记事本打开该文件，在<code>deploy</code>行修改以下内容：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:&#123;useremail&#125;/&#123;useremail&#125;.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>以下为旧版写法，现已不再使用：<br><details class="folding-tag" red><summary> 旧版写法，已废弃 </summary>              <div class='content'>              <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com/&#123;useremail&#125;/&#123;useremail&#125;.github.io</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>              </div>            </details><br>上面可以说是踩过的最大的一个坑了。<font color=red>首先，冒号后面必须有一个空格；其次，repo写法的不同是因为旧版本hexo2.x版本的写法在3.x中已经不适用了；最后，可能有的人新建的分支默认为<strong>master</strong>（即branch后面为master而非main），以前GitHub创建仓库时都是默认的master，但是因为master有着“主宰、暴君”的含义，所以GitHub就将默认改成了<strong>main</strong>。</font></p><hr><h1 id="四、创建博客文件"><a href="#四、创建博客文件" class="headerlink" title="四、创建博客文件"></a>四、创建博客文件</h1><h2 id="1-初始化文件夹"><a href="#1-初始化文件夹" class="headerlink" title="1.初始化文件夹"></a>1.初始化文件夹</h2><p><code>hexo init</code></p><h2 id="2-安装组件"><a href="#2-安装组件" class="headerlink" title="2.安装组件"></a>2.安装组件</h2><p><code>npm install</code></p><h2 id="3-清除本地静态页面"><a href="#3-清除本地静态页面" class="headerlink" title="3.清除本地静态页面"></a>3.清除本地静态页面</h2><p><code>hexo clean</code></p><h2 id="4-生成本地静态页面"><a href="#4-生成本地静态页面" class="headerlink" title="4.生成本地静态页面"></a>4.生成本地静态页面</h2><p><code>hexo generate</code>或 <code>hexo g</code></p><h2 id="5-本地预览页面"><a href="#5-本地预览页面" class="headerlink" title="5.本地预览页面"></a>5.本地预览页面</h2><p><code>hexo server</code>或 <code>hexo s</code>，随后在浏览器打开本地静态页面：<a href="http://localhost:4000/">http://localhost:4000/</a><br>按下 <code>ctrl+C</code>可结束本地预览。</p><h2 id="6-上传本地静态页面"><a href="#6-上传本地静态页面" class="headerlink" title="6.上传本地静态页面"></a>6.上传本地静态页面</h2><p><code>hexo deploy</code>或 <code>hexo d</code></p><p>打开自己的博客地址 <code>&#123;username&#125;.github.io</code>，大功告成！</p>]]></content>
      
      
      <categories>
          
          <category> 博客技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客技巧 </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
